/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC721ABurnableMock,
  ERC721ABurnableMockInterface,
} from "../../../contracts/mocks/ERC721ABurnableMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "LockUntilMustBeUpperThanCurrentValue",
    type: "error",
  },
  {
    inputs: [],
    name: "LockUntilZero",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferLockedToken",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getOwnershipAt",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "startTimestamp",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "burned",
            type: "bool",
          },
          {
            internalType: "uint24",
            name: "extraData",
            type: "uint24",
          },
        ],
        internalType: "struct IERC721A.TokenOwnership",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "_lockUntil",
        type: "uint64",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "_lockUntil",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "lockTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lockUntil",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "numberBurned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalBurned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002b9438038062002b948339818101604052810190620000379190620001b6565b818181600290805190602001906200005192919062000094565b5080600390805190602001906200006a92919062000094565b506200007b6200008b60201b60201c565b6000819055505050505062000399565b60006001905090565b828054620000a290620002be565b90600052602060002090601f016020900481019282620000c6576000855562000112565b82601f10620000e157805160ff191683800117855562000112565b8280016001018555821562000112579182015b8281111562000111578251825591602001919060010190620000f4565b5b50905062000121919062000125565b5090565b5b808211156200014057600081600090555060010162000126565b5090565b60006200015b620001558462000252565b62000229565b9050828152602081018484840111156200017457600080fd5b6200018184828562000288565b509392505050565b600082601f8301126200019b57600080fd5b8151620001ad84826020860162000144565b91505092915050565b60008060408385031215620001ca57600080fd5b600083015167ffffffffffffffff811115620001e557600080fd5b620001f38582860162000189565b925050602083015167ffffffffffffffff8111156200021157600080fd5b6200021f8582860162000189565b9150509250929050565b60006200023562000248565b9050620002438282620002f4565b919050565b6000604051905090565b600067ffffffffffffffff82111562000270576200026f62000359565b5b6200027b8262000388565b9050602081019050919050565b60005b83811015620002a85780820151818401526020810190506200028b565b83811115620002b8576000848401525b50505050565b60006002820490506001821680620002d757607f821691505b60208210811415620002ee57620002ed6200032a565b5b50919050565b620002ff8262000388565b810181811067ffffffffffffffff8211171562000321576200032062000359565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6127eb80620003a96000396000f3fe60806040526004361061014b5760003560e01c80634f558e79116100b6578063a2309ff81161006f578063a2309ff81461049d578063b88d4fde146104c8578063c87b56dd146104e4578063d89135cd14610521578063e985e9c51461054c578063f2523633146105895761014b565b80634f558e79146103695780636352211e146103a657806370a08231146103e357806395d89b4114610420578063a14481941461044b578063a22cb465146104745761014b565b80632017329211610108578063201732921461027957806323b872dd146102a25780632478d639146102be5780633efa9979146102fb57806342842e0e1461032457806342966c68146103405761014b565b806301ffc9a71461015057806306fdde031461018d578063081812fc146101b8578063095ea7b3146101f55780630ceea3051461021157806318160ddd1461024e575b600080fd5b34801561015c57600080fd5b50610177600480360381019061017291906120f0565b6105c6565b60405161018491906123a2565b60405180910390f35b34801561019957600080fd5b506101a2610658565b6040516101af91906123bd565b60405180910390f35b3480156101c457600080fd5b506101df60048036038101906101da9190612142565b6106ea565b6040516101ec919061233b565b60405180910390f35b61020f600480360381019061020a91906120b4565b610769565b005b34801561021d57600080fd5b5061023860048036038101906102339190612142565b6108ad565b6040516102459190612415565b60405180910390f35b34801561025a57600080fd5b506102636108d4565b60405161027091906123fa565b60405180910390f35b34801561028557600080fd5b506102a0600480360381019061029b9190611fe9565b6108eb565b005b6102bc60048036038101906102b79190611f1f565b610908565b005b3480156102ca57600080fd5b506102e560048036038101906102e09190611eba565b610c2d565b6040516102f291906123fa565b60405180910390f35b34801561030757600080fd5b50610322600480360381019061031d919061216b565b610c3f565b005b61033e60048036038101906103399190611f1f565b610ccb565b005b34801561034c57600080fd5b5061036760048036038101906103629190612142565b610ceb565b005b34801561037557600080fd5b50610390600480360381019061038b9190612142565b610cf9565b60405161039d91906123a2565b60405180910390f35b3480156103b257600080fd5b506103cd60048036038101906103c89190612142565b610d0b565b6040516103da919061233b565b60405180910390f35b3480156103ef57600080fd5b5061040a60048036038101906104059190611eba565b610d1d565b60405161041791906123fa565b60405180910390f35b34801561042c57600080fd5b50610435610dd6565b60405161044291906123bd565b60405180910390f35b34801561045757600080fd5b50610472600480360381019061046d91906120b4565b610e68565b005b34801561048057600080fd5b5061049b60048036038101906104969190612078565b610e76565b005b3480156104a957600080fd5b506104b2610f81565b6040516104bf91906123fa565b60405180910390f35b6104e260048036038101906104dd9190611f6e565b610f90565b005b3480156104f057600080fd5b5061050b60048036038101906105069190612142565b611003565b60405161051891906123bd565b60405180910390f35b34801561052d57600080fd5b506105366110a2565b60405161054391906123fa565b60405180910390f35b34801561055857600080fd5b50610573600480360381019061056e9190611ee3565b6110b1565b60405161058091906123a2565b60405180910390f35b34801561059557600080fd5b506105b060048036038101906105ab9190612142565b611145565b6040516105bd91906123df565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061062157506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806106515750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b606060028054610667906125f8565b80601f0160208091040260200160405190810160405280929190818152602001828054610693906125f8565b80156106e05780601f106106b5576101008083540402835291602001916106e0565b820191906000526020600020905b8154815290600101906020018083116106c357829003601f168201915b5050505050905090565b60006106f58261115d565b61072b576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061077482610d0b565b90508073ffffffffffffffffffffffffffffffffffffffff166107956111bc565b73ffffffffffffffffffffffffffffffffffffffff16146107f8576107c1816107bc6111bc565b6110b1565b6107f7576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b826006600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b60086020528060005260406000206000915054906101000a900467ffffffffffffffff1681565b60006108de6111c4565b6001546000540303905090565b6108f785858584610f90565b61090183836111cd565b5050505050565b600061091382611304565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461097a576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080610986846113d2565b9150915061099c81876109976111bc565b6113f9565b6109e8576109b1866109ac6111bc565b6110b1565b6109e7576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610a4f576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a5c868686600161143d565b8015610a6757600082555b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815460010191905081905550610b3585610b11888887611522565b7c02000000000000000000000000000000000000000000000000000000001761154a565b600460008681526020019081526020016000208190555060007c020000000000000000000000000000000000000000000000000000000084161415610bbd576000600185019050600060046000838152602001908152602001600020541415610bbb576000548114610bba578360046000838152602001908152602001600020819055505b5b505b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610c258686866001611575565b505050505050565b6000610c388261157b565b9050919050565b6000610c4a83610d0b565b9050600080610c58856113d2565b91509150610c6e8184610c696111bc565b6113f9565b610cba57610c8383610c7e6111bc565b6110b1565b610cb9576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b610cc485856111cd565b5050505050565b610ce683838360405180602001604052806000815250610f90565b505050565b610cf68160016115d2565b50565b6000610d048261115d565b9050919050565b6000610d1682611304565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d85576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b606060038054610de5906125f8565b80601f0160208091040260200160405190810160405280929190818152602001828054610e11906125f8565b8015610e5e5780601f10610e3357610100808354040283529160200191610e5e565b820191906000526020600020905b815481529060010190602001808311610e4157829003601f168201915b5050505050905090565b610e728282611826565b5050565b8060076000610e836111bc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610f306111bc565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610f7591906123a2565b60405180910390a35050565b6000610f8b611844565b905090565b610f9b848484610908565b60008373ffffffffffffffffffffffffffffffffffffffff163b14610ffd57610fc684848484611857565b610ffc576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b606061100e8261115d565b611044576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061104e6119b7565b905060008151141561106f576040518060200160405280600081525061109a565b80611079846119ce565b60405160200161108a929190612317565b6040516020818303038152906040525b915050919050565b60006110ac611a27565b905090565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61114d611d85565b61115682611a31565b9050919050565b6000816111686111c4565b11158015611177575060005482105b80156111b5575060007c0100000000000000000000000000000000000000000000000000000000600460008581526020019081526020016000205416145b9050919050565b600033905090565b60006001905090565b60008167ffffffffffffffff161415611212576040517fccfbd56600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006008600084815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff161415801561128f57506008600083815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff168167ffffffffffffffff1611155b156112c6576040517f92fe021400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806008600084815260200190815260200160002060006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505050565b600080829050806113136111c4565b1161139b5760005481101561139a5760006004600083815260200190815260200160002054905060007c010000000000000000000000000000000000000000000000000000000082161415611398575b600081141561138e576004600083600190039350838152602001908152602001600020549050611363565b80925050506113cd565b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b60008060006006600085815260200190815260200160002090508092508254915050915091565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b60005b8181101561151b57600060086000838661145a91906124c9565b815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff16141580156114d157506008600082856114a091906124c9565b815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff164211155b15611508576040517f750e912300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80806115139061265b565b915050611440565b5050505050565b60008060e883901c905060e8611539868684611a5c565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b600067ffffffffffffffff6080600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054901c169050919050565b60006115dd83611304565b905060008190506000806115f0866113d2565b9150915084156116595761160c81846116076111bc565b6113f9565b611658576116218361161c6111bc565b6110b1565b611657576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b5b61166783600088600161143d565b801561167257600082555b600160806001901b03600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555061171a836116d785600088611522565b7c02000000000000000000000000000000000000000000000000000000007c0100000000000000000000000000000000000000000000000000000000171761154a565b600460008881526020019081526020016000208190555060007c0200000000000000000000000000000000000000000000000000000000851614156117a25760006001870190506000600460008381526020019081526020016000205414156117a057600054811461179f578460046000838152602001908152602001600020819055505b5b505b85600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a461180c836000886001611575565b600160008154809291906001019190505550505050505050565b611840828260405180602001604052806000815250611a65565b5050565b600061184e6111c4565b60005403905090565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a0261187d6111bc565b8786866040518563ffffffff1660e01b815260040161189f9493929190612356565b602060405180830381600087803b1580156118b957600080fd5b505af19250505080156118ea57506040513d601f19601f820116820180604052508101906118e79190612119565b60015b611964573d806000811461191a576040519150601f19603f3d011682016040523d82523d6000602084013e61191f565b606091505b5060008151141561195c576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052806000815250905090565b606060a060405101806040526020810391506000825281835b600115611a1257600184039350600a81066030018453600a8104905080611a0d57611a12565b6119e7565b50828103602084039350808452505050919050565b6000600154905090565b611a39611d85565b611a556004600084815260200190815260200160002054611b02565b9050919050565b60009392505050565b611a6f8383611bb8565b60008373ffffffffffffffffffffffffffffffffffffffff163b14611afd57600080549050600083820390505b611aaf6000868380600101945086611857565b611ae5576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b818110611a9c578160005414611afa57600080fd5b50505b505050565b611b0a611d85565b81816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060a082901c816020019067ffffffffffffffff16908167ffffffffffffffff168152505060007c01000000000000000000000000000000000000000000000000000000008316141581604001901515908115158152505060e882901c816060019062ffffff16908162ffffff1681525050919050565b6000805490506000821415611bf9576040517fb562e8dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611c06600084838561143d565b600160406001901b178202600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550611c7d83611c6e6000866000611522565b611c7785611d75565b1761154a565b6004600083815260200190815260200160002081905550600080838301905073ffffffffffffffffffffffffffffffffffffffff85169150828260007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600183015b818114611d1e57808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600181019050611ce3565b506000821415611d5a576040517f2e07630000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000819055505050611d706000848385611575565b505050565b60006001821460e11b9050919050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff168152602001600015158152602001600062ffffff1681525090565b6000611de7611de284612455565b612430565b905082815260208101848484011115611dff57600080fd5b611e0a8482856125b6565b509392505050565b600081359050611e2181612742565b92915050565b600081359050611e3681612759565b92915050565b600081359050611e4b81612770565b92915050565b600081519050611e6081612770565b92915050565b600082601f830112611e7757600080fd5b8135611e87848260208601611dd4565b91505092915050565b600081359050611e9f81612787565b92915050565b600081359050611eb48161279e565b92915050565b600060208284031215611ecc57600080fd5b6000611eda84828501611e12565b91505092915050565b60008060408385031215611ef657600080fd5b6000611f0485828601611e12565b9250506020611f1585828601611e12565b9150509250929050565b600080600060608486031215611f3457600080fd5b6000611f4286828701611e12565b9350506020611f5386828701611e12565b9250506040611f6486828701611e90565b9150509250925092565b60008060008060808587031215611f8457600080fd5b6000611f9287828801611e12565b9450506020611fa387828801611e12565b9350506040611fb487828801611e90565b925050606085013567ffffffffffffffff811115611fd157600080fd5b611fdd87828801611e66565b91505092959194509250565b600080600080600060a0868803121561200157600080fd5b600061200f88828901611e12565b955050602061202088828901611e12565b945050604061203188828901611e90565b935050606061204288828901611ea5565b925050608086013567ffffffffffffffff81111561205f57600080fd5b61206b88828901611e66565b9150509295509295909350565b6000806040838503121561208b57600080fd5b600061209985828601611e12565b92505060206120aa85828601611e27565b9150509250929050565b600080604083850312156120c757600080fd5b60006120d585828601611e12565b92505060206120e685828601611e90565b9150509250929050565b60006020828403121561210257600080fd5b600061211084828501611e3c565b91505092915050565b60006020828403121561212b57600080fd5b600061213984828501611e51565b91505092915050565b60006020828403121561215457600080fd5b600061216284828501611e90565b91505092915050565b6000806040838503121561217e57600080fd5b600061218c85828601611e90565b925050602061219d85828601611ea5565b9150509250929050565b6121b08161251f565b82525050565b6121bf8161251f565b82525050565b6121ce81612531565b82525050565b6121dd81612531565b82525050565b60006121ee82612486565b6121f8818561249c565b93506122088185602086016125c5565b61221181612731565b840191505092915050565b600061222782612491565b61223181856124ad565b93506122418185602086016125c5565b61224a81612731565b840191505092915050565b600061226082612491565b61226a81856124be565b935061227a8185602086016125c5565b80840191505092915050565b60808201600082015161229c60008501826121a7565b5060208201516122af60208501826122f9565b5060408201516122c260408501826121c5565b5060608201516122d560608501826122db565b50505050565b6122e481612589565b82525050565b6122f381612598565b82525050565b612302816125a2565b82525050565b612311816125a2565b82525050565b60006123238285612255565b915061232f8284612255565b91508190509392505050565b600060208201905061235060008301846121b6565b92915050565b600060808201905061236b60008301876121b6565b61237860208301866121b6565b61238560408301856122ea565b818103606083015261239781846121e3565b905095945050505050565b60006020820190506123b760008301846121d4565b92915050565b600060208201905081810360008301526123d7818461221c565b905092915050565b60006080820190506123f46000830184612286565b92915050565b600060208201905061240f60008301846122ea565b92915050565b600060208201905061242a6000830184612308565b92915050565b600061243a61244b565b9050612446828261262a565b919050565b6000604051905090565b600067ffffffffffffffff8211156124705761246f612702565b5b61247982612731565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006124d482612598565b91506124df83612598565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612514576125136126a4565b5b828201905092915050565b600061252a82612569565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b82818337600083830152505050565b60005b838110156125e35780820151818401526020810190506125c8565b838111156125f2576000848401525b50505050565b6000600282049050600182168061261057607f821691505b60208210811415612624576126236126d3565b5b50919050565b61263382612731565b810181811067ffffffffffffffff8211171561265257612651612702565b5b80604052505050565b600061266682612598565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612699576126986126a4565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61274b8161251f565b811461275657600080fd5b50565b61276281612531565b811461276d57600080fd5b50565b6127798161253d565b811461278457600080fd5b50565b61279081612598565b811461279b57600080fd5b50565b6127a7816125a2565b81146127b257600080fd5b5056fea26469706673582212209bc5f95ff75453be395e5bd2414788c006fb7d0b7ea930b648c68fa7f703e1af64736f6c63430008040033";

type ERC721ABurnableMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721ABurnableMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721ABurnableMock__factory extends ContractFactory {
  constructor(...args: ERC721ABurnableMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721ABurnableMock> {
    return super.deploy(
      name_,
      symbol_,
      overrides || {}
    ) as Promise<ERC721ABurnableMock>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override attach(address: string): ERC721ABurnableMock {
    return super.attach(address) as ERC721ABurnableMock;
  }
  override connect(signer: Signer): ERC721ABurnableMock__factory {
    return super.connect(signer) as ERC721ABurnableMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721ABurnableMockInterface {
    return new utils.Interface(_abi) as ERC721ABurnableMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721ABurnableMock {
    return new Contract(address, _abi, signerOrProvider) as ERC721ABurnableMock;
  }
}
