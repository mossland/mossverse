/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC4907AMock,
  ERC4907AMockInterface,
} from "../../../contracts/mocks/ERC4907AMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "LockUntilMustBeUpperThanCurrentValue",
    type: "error",
  },
  {
    inputs: [],
    name: "LockUntilZero",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "SetUserCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferLockedToken",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "expires",
        type: "uint64",
      },
    ],
    name: "UpdateUser",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "explicitUserOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "_lockUntil",
        type: "uint64",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "_lockUntil",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "lockTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lockUntil",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "expires",
        type: "uint64",
      },
    ],
    name: "setUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "userExpires",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "userOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620027d6380380620027d68339818101604052810190620000379190620001b6565b818181600290805190602001906200005192919062000094565b5080600390805190602001906200006a92919062000094565b506200007b6200008b60201b60201c565b6000819055505050505062000399565b60006001905090565b828054620000a290620002be565b90600052602060002090601f016020900481019282620000c6576000855562000112565b82601f10620000e157805160ff191683800117855562000112565b8280016001018555821562000112579182015b8281111562000111578251825591602001919060010190620000f4565b5b50905062000121919062000125565b5090565b5b808211156200014057600081600090555060010162000126565b5090565b60006200015b620001558462000252565b62000229565b9050828152602081018484840111156200017457600080fd5b6200018184828562000288565b509392505050565b600082601f8301126200019b57600080fd5b8151620001ad84826020860162000144565b91505092915050565b60008060408385031215620001ca57600080fd5b600083015167ffffffffffffffff811115620001e557600080fd5b620001f38582860162000189565b925050602083015167ffffffffffffffff8111156200021157600080fd5b6200021f8582860162000189565b9150509250929050565b60006200023562000248565b9050620002438282620002f4565b919050565b6000604051905090565b600067ffffffffffffffff82111562000270576200026f62000359565b5b6200027b8262000388565b9050602081019050919050565b60005b83811015620002a85780820151818401526020810190506200028b565b83811115620002b8576000848401525b50505050565b60006002820490506001821680620002d757607f821691505b60208210811415620002ee57620002ed6200032a565b5b50919050565b620002ff8262000388565b810181811067ffffffffffffffff8211171562000321576200032062000359565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61242d80620003a96000396000f3fe6080604052600436106101355760003560e01c80636352211e116100ab578063b88d4fde1161006f578063b88d4fde14610421578063c2f1f14a1461043d578063c87b56dd1461047a578063e030565e146104b7578063e985e9c5146104e0578063ed1959681461051d57610135565b80636352211e1461031657806370a08231146103535780638fc88c481461039057806395d89b41146103cd578063a22cb465146103f857610135565b806318160ddd116100fd57806318160ddd14610238578063201732921461026357806323b872dd1461028c5780633efa9979146102a857806340c10f19146102d157806342842e0e146102fa57610135565b806301ffc9a71461013a57806306fdde0314610177578063081812fc146101a2578063095ea7b3146101df5780630ceea305146101fb575b600080fd5b34801561014657600080fd5b50610161600480360381019061015c9190611d9e565b61055a565b60405161016e919061200e565b60405180910390f35b34801561018357600080fd5b5061018c61056c565b6040516101999190612029565b60405180910390f35b3480156101ae57600080fd5b506101c960048036038101906101c49190611df0565b6105fe565b6040516101d69190611fa7565b60405180910390f35b6101f960048036038101906101f49190611d62565b61067d565b005b34801561020757600080fd5b50610222600480360381019061021d9190611df0565b6107c1565b60405161022f9190612066565b60405180910390f35b34801561024457600080fd5b5061024d6107e8565b60405161025a919061204b565b60405180910390f35b34801561026f57600080fd5b5061028a60048036038101906102859190611c97565b6107ff565b005b6102a660048036038101906102a19190611bcd565b61081c565b005b3480156102b457600080fd5b506102cf60048036038101906102ca9190611e68565b610b41565b005b3480156102dd57600080fd5b506102f860048036038101906102f39190611d62565b610bcd565b005b610314600480360381019061030f9190611bcd565b610bdb565b005b34801561032257600080fd5b5061033d60048036038101906103389190611df0565b610bfb565b60405161034a9190611fa7565b60405180910390f35b34801561035f57600080fd5b5061037a60048036038101906103759190611b68565b610c0d565b604051610387919061204b565b60405180910390f35b34801561039c57600080fd5b506103b760048036038101906103b29190611df0565b610cc6565b6040516103c4919061204b565b60405180910390f35b3480156103d957600080fd5b506103e2610ce7565b6040516103ef9190612029565b60405180910390f35b34801561040457600080fd5b5061041f600480360381019061041a9190611d26565b610d79565b005b61043b60048036038101906104369190611c1c565b610e84565b005b34801561044957600080fd5b50610464600480360381019061045f9190611df0565b610ef7565b6040516104719190611fa7565b60405180910390f35b34801561048657600080fd5b506104a1600480360381019061049c9190611df0565b610f23565b6040516104ae9190612029565b60405180910390f35b3480156104c357600080fd5b506104de60048036038101906104d99190611e19565b610fc2565b005b3480156104ec57600080fd5b5061050760048036038101906105029190611b91565b611127565b604051610514919061200e565b60405180910390f35b34801561052957600080fd5b50610544600480360381019061053f9190611df0565b6111bb565b6040516105519190611fa7565b60405180910390f35b6000610565826111cd565b9050919050565b60606002805461057b9061223a565b80601f01602080910402602001604051908101604052809291908181526020018280546105a79061223a565b80156105f45780601f106105c9576101008083540402835291602001916105f4565b820191906000526020600020905b8154815290600101906020018083116105d757829003601f168201915b5050505050905090565b60006106098261120f565b61063f576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061068882610bfb565b90508073ffffffffffffffffffffffffffffffffffffffff166106a961126e565b73ffffffffffffffffffffffffffffffffffffffff161461070c576106d5816106d061126e565b611127565b61070b576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b826006600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b60086020528060005260406000206000915054906101000a900467ffffffffffffffff1681565b60006107f2611276565b6001546000540303905090565b61080b85858584610e84565b610815838361127f565b5050505050565b6000610827826113b6565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461088e576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008061089a84611484565b915091506108b081876108ab61126e565b6114ab565b6108fc576108c5866108c061126e565b611127565b6108fb576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610963576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61097086868660016114ef565b801561097b57600082555b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815460010191905081905550610a4985610a258888876115d4565b7c0200000000000000000000000000000000000000000000000000000000176115fc565b600460008681526020019081526020016000208190555060007c020000000000000000000000000000000000000000000000000000000084161415610ad1576000600185019050600060046000838152602001908152602001600020541415610acf576000548114610ace578360046000838152602001908152602001600020819055505b5b505b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610b398686866001611627565b505050505050565b6000610b4c83610bfb565b9050600080610b5a85611484565b91509150610b708184610b6b61126e565b6114ab565b610bbc57610b8583610b8061126e565b611127565b610bbb576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b610bc6858561127f565b5050505050565b610bd7828261162d565b5050565b610bf683838360405180602001604052806000815250610e84565b505050565b6000610c06826113b6565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c75576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b600060a06009600084815260200190815260200160002054901c9050919050565b606060038054610cf69061223a565b80601f0160208091040260200160405190810160405280929190818152602001828054610d229061223a565b8015610d6f5780601f10610d4457610100808354040283529160200191610d6f565b820191906000526020600020905b815481529060010190602001808311610d5257829003601f168201915b5050505050905090565b8060076000610d8661126e565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610e3361126e565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610e78919061200e565b60405180910390a35050565b610e8f84848461081c565b60008373ffffffffffffffffffffffffffffffffffffffff163b14610ef157610eba848484846117ea565b610ef0576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b60008060096000848152602001908152602001600020549050804260a01b108102905080915050919050565b6060610f2e8261120f565b610f64576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610f6e61194a565b9050600081511415610f8f5760405180602001604052806000815250610fba565b80610f9984611961565b604051602001610faa929190611f83565b6040516020818303038152906040525b915050919050565b6000610fcd84610bfb565b90508073ffffffffffffffffffffffffffffffffffffffff16610fee61126e565b73ffffffffffffffffffffffffffffffffffffffff16146110945761101a8161101561126e565b611127565b6110935761102661126e565b73ffffffffffffffffffffffffffffffffffffffff16611045856105fe565b73ffffffffffffffffffffffffffffffffffffffff1614611092576040517f4f1dd8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b5b8273ffffffffffffffffffffffffffffffffffffffff1660a08367ffffffffffffffff16901b1760096000868152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff16847f4e06b4e7000e659094299b3533b47b6aa8ad048e95e872d23d1f4ee55af89cfe846040516111199190612066565b60405180910390a350505050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60006111c6826119ba565b9050919050565b60006111d8826119d7565b80611208575063ad092b5c60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60008161121a611276565b11158015611229575060005482105b8015611267575060007c0100000000000000000000000000000000000000000000000000000000600460008581526020019081526020016000205416145b9050919050565b600033905090565b60006001905090565b60008167ffffffffffffffff1614156112c4576040517fccfbd56600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006008600084815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff161415801561134157506008600083815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff168167ffffffffffffffff1611155b15611378576040517f92fe021400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806008600084815260200190815260200160002060006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505050565b600080829050806113c5611276565b1161144d5760005481101561144c5760006004600083815260200190815260200160002054905060007c01000000000000000000000000000000000000000000000000000000008216141561144a575b6000811415611440576004600083600190039350838152602001908152602001600020549050611415565b809250505061147f565b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b60008060006006600085815260200190815260200160002090508092508254915050915091565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b60005b818110156115cd57600060086000838661150c919061211a565b815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff16141580156115835750600860008285611552919061211a565b815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff164211155b156115ba576040517f750e912300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80806115c59061229d565b9150506114f2565b5050505050565b60008060e883901c905060e86115eb868684611a69565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b600080549050600082141561166e576040517fb562e8dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61167b60008483856114ef565b600160406001901b178202600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506116f2836116e360008660006115d4565b6116ec85611a72565b176115fc565b6004600083815260200190815260200160002081905550600080838301905073ffffffffffffffffffffffffffffffffffffffff85169150828260007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600183015b81811461179357808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600181019050611758565b5060008214156117cf576040517f2e07630000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060008190555050506117e56000848385611627565b505050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a0261181061126e565b8786866040518563ffffffff1660e01b81526004016118329493929190611fc2565b602060405180830381600087803b15801561184c57600080fd5b505af192505050801561187d57506040513d601f19601f8201168201806040525081019061187a9190611dc7565b60015b6118f7573d80600081146118ad576040519150601f19603f3d011682016040523d82523d6000602084013e6118b2565b606091505b506000815114156118ef576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052806000815250905090565b606060a060405101806040526020810391506000825281835b6001156119a557600184039350600a81066030018453600a81049050806119a0576119a5565b61197a565b50828103602084039350808452505050919050565b600060096000838152602001908152602001600020549050919050565b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480611a3257506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80611a625750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60009392505050565b60006001821460e11b9050919050565b6000611a95611a90846120a6565b612081565b905082815260208101848484011115611aad57600080fd5b611ab88482856121f8565b509392505050565b600081359050611acf81612384565b92915050565b600081359050611ae48161239b565b92915050565b600081359050611af9816123b2565b92915050565b600081519050611b0e816123b2565b92915050565b600082601f830112611b2557600080fd5b8135611b35848260208601611a82565b91505092915050565b600081359050611b4d816123c9565b92915050565b600081359050611b62816123e0565b92915050565b600060208284031215611b7a57600080fd5b6000611b8884828501611ac0565b91505092915050565b60008060408385031215611ba457600080fd5b6000611bb285828601611ac0565b9250506020611bc385828601611ac0565b9150509250929050565b600080600060608486031215611be257600080fd5b6000611bf086828701611ac0565b9350506020611c0186828701611ac0565b9250506040611c1286828701611b3e565b9150509250925092565b60008060008060808587031215611c3257600080fd5b6000611c4087828801611ac0565b9450506020611c5187828801611ac0565b9350506040611c6287828801611b3e565b925050606085013567ffffffffffffffff811115611c7f57600080fd5b611c8b87828801611b14565b91505092959194509250565b600080600080600060a08688031215611caf57600080fd5b6000611cbd88828901611ac0565b9550506020611cce88828901611ac0565b9450506040611cdf88828901611b3e565b9350506060611cf088828901611b53565b925050608086013567ffffffffffffffff811115611d0d57600080fd5b611d1988828901611b14565b9150509295509295909350565b60008060408385031215611d3957600080fd5b6000611d4785828601611ac0565b9250506020611d5885828601611ad5565b9150509250929050565b60008060408385031215611d7557600080fd5b6000611d8385828601611ac0565b9250506020611d9485828601611b3e565b9150509250929050565b600060208284031215611db057600080fd5b6000611dbe84828501611aea565b91505092915050565b600060208284031215611dd957600080fd5b6000611de784828501611aff565b91505092915050565b600060208284031215611e0257600080fd5b6000611e1084828501611b3e565b91505092915050565b600080600060608486031215611e2e57600080fd5b6000611e3c86828701611b3e565b9350506020611e4d86828701611ac0565b9250506040611e5e86828701611b53565b9150509250925092565b60008060408385031215611e7b57600080fd5b6000611e8985828601611b3e565b9250506020611e9a85828601611b53565b9150509250929050565b611ead81612170565b82525050565b611ebc81612182565b82525050565b6000611ecd826120d7565b611ed781856120ed565b9350611ee7818560208601612207565b611ef081612373565b840191505092915050565b6000611f06826120e2565b611f1081856120fe565b9350611f20818560208601612207565b611f2981612373565b840191505092915050565b6000611f3f826120e2565b611f49818561210f565b9350611f59818560208601612207565b80840191505092915050565b611f6e816121da565b82525050565b611f7d816121e4565b82525050565b6000611f8f8285611f34565b9150611f9b8284611f34565b91508190509392505050565b6000602082019050611fbc6000830184611ea4565b92915050565b6000608082019050611fd76000830187611ea4565b611fe46020830186611ea4565b611ff16040830185611f65565b81810360608301526120038184611ec2565b905095945050505050565b60006020820190506120236000830184611eb3565b92915050565b600060208201905081810360008301526120438184611efb565b905092915050565b60006020820190506120606000830184611f65565b92915050565b600060208201905061207b6000830184611f74565b92915050565b600061208b61209c565b9050612097828261226c565b919050565b6000604051905090565b600067ffffffffffffffff8211156120c1576120c0612344565b5b6120ca82612373565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000612125826121da565b9150612130836121da565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612165576121646122e6565b5b828201905092915050565b600061217b826121ba565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b82818337600083830152505050565b60005b8381101561222557808201518184015260208101905061220a565b83811115612234576000848401525b50505050565b6000600282049050600182168061225257607f821691505b6020821081141561226657612265612315565b5b50919050565b61227582612373565b810181811067ffffffffffffffff8211171561229457612293612344565b5b80604052505050565b60006122a8826121da565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156122db576122da6122e6565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61238d81612170565b811461239857600080fd5b50565b6123a481612182565b81146123af57600080fd5b50565b6123bb8161218e565b81146123c657600080fd5b50565b6123d2816121da565b81146123dd57600080fd5b50565b6123e9816121e4565b81146123f457600080fd5b5056fea2646970667358221220b89f503b917565dcc1e70242f144270dcd99f8ac1711f2059e13f4cffa4f8b7f64736f6c63430008040033";

type ERC4907AMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC4907AMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC4907AMock__factory extends ContractFactory {
  constructor(...args: ERC4907AMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC4907AMock> {
    return super.deploy(
      name_,
      symbol_,
      overrides || {}
    ) as Promise<ERC4907AMock>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override attach(address: string): ERC4907AMock {
    return super.attach(address) as ERC4907AMock;
  }
  override connect(signer: Signer): ERC4907AMock__factory {
    return super.connect(signer) as ERC4907AMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC4907AMockInterface {
    return new utils.Interface(_abi) as ERC4907AMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC4907AMock {
    return new Contract(address, _abi, signerOrProvider) as ERC4907AMock;
  }
}
