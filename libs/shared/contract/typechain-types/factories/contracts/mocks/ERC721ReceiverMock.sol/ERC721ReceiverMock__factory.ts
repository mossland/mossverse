/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC721ReceiverMock,
  ERC721ReceiverMockInterface,
} from "../../../../contracts/mocks/ERC721ReceiverMock.sol/ERC721ReceiverMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "retval",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "erc721aMock",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gas",
        type: "uint256",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b506040516108de3803806108de833981810160405281019061003291906100e0565b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166080817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050506101a8565b6000815190506100c58161017a565b92915050565b6000815190506100da81610191565b92915050565b600080604083850312156100f357600080fd5b6000610101858286016100cb565b9250506020610112858286016100b6565b9150509250929050565b60006101278261015a565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6101838161011c565b811461018e57600080fd5b50565b61019a8161012e565b81146101a557600080fd5b50565b60805160e01c60e01b60a05160601c6107086101d66000396000610126015260006101f601526107086000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004a600480360381019061004591906102b3565b610060565b6040516100579190610458565b60405180910390f35b60008060008351146100bc57826000815181106100a6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b60f81c60ff166100bf565b60005b90506001811415610105576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100fc90610473565b60405180910390fd5b600281141561011b57600060e01b915050610219565b60038114156101b3577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a14481943060016040518363ffffffff1660e01b815260040161018092919061042f565b600060405180830381600087803b15801561019a57600080fd5b505af11580156101ae573d6000803e3d6000fd5b505050505b7f28fa6e16458f9c24aa59ddd4085264573006dbe30304837873c7deafc702b03886868686614e206040516101ec9594939291906103d5565b60405180910390a17f00000000000000000000000000000000000000000000000000000000000000009150505b949350505050565b600061023461022f846104b8565b610493565b90508281526020810184848401111561024c57600080fd5b6102578482856105a2565b509392505050565b60008135905061026e816106a4565b92915050565b600082601f83011261028557600080fd5b8135610295848260208601610221565b91505092915050565b6000813590506102ad816106bb565b92915050565b600080600080608085870312156102c957600080fd5b60006102d78782880161025f565b94505060206102e88782880161025f565b93505060406102f98782880161029e565b925050606085013567ffffffffffffffff81111561031657600080fd5b61032287828801610274565b91505092959194509250565b61033781610516565b82525050565b61034681610528565b82525050565b6000610357826104e9565b61036181856104f4565b93506103718185602086016105b1565b61037a81610644565b840191505092915050565b61038e8161057e565b82525050565b61039d81610590565b82525050565b60006103b0602283610505565b91506103bb82610655565b604082019050919050565b6103cf81610574565b82525050565b600060a0820190506103ea600083018861032e565b6103f7602083018761032e565b61040460408301866103c6565b8181036060830152610416818561034c565b90506104256080830184610394565b9695505050505050565b6000604082019050610444600083018561032e565b6104516020830184610385565b9392505050565b600060208201905061046d600083018461033d565b92915050565b6000602082019050818103600083015261048c816103a3565b9050919050565b600061049d6104ae565b90506104a982826105e4565b919050565b6000604051905090565b600067ffffffffffffffff8211156104d3576104d2610615565b5b6104dc82610644565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061052182610554565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061058982610574565b9050919050565b600061059b82610574565b9050919050565b82818337600083830152505050565b60005b838110156105cf5780820151818401526020810190506105b4565b838111156105de576000848401525b50505050565b6105ed82610644565b810181811067ffffffffffffffff8211171561060c5761060b610615565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f726576657274656420696e2074686520726563656976657220636f6e7472616360008201527f7421000000000000000000000000000000000000000000000000000000000000602082015250565b6106ad81610516565b81146106b857600080fd5b50565b6106c481610574565b81146106cf57600080fd5b5056fea2646970667358221220b84775b1a61d38a88e4eb63f69d569b5a2d80b95ac68f6dc66132bf33e929c6664736f6c63430008040033";

type ERC721ReceiverMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721ReceiverMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721ReceiverMock__factory extends ContractFactory {
  constructor(...args: ERC721ReceiverMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    retval: PromiseOrValue<BytesLike>,
    erc721aMock: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721ReceiverMock> {
    return super.deploy(
      retval,
      erc721aMock,
      overrides || {}
    ) as Promise<ERC721ReceiverMock>;
  }
  override getDeployTransaction(
    retval: PromiseOrValue<BytesLike>,
    erc721aMock: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(retval, erc721aMock, overrides || {});
  }
  override attach(address: string): ERC721ReceiverMock {
    return super.attach(address) as ERC721ReceiverMock;
  }
  override connect(signer: Signer): ERC721ReceiverMock__factory {
    return super.connect(signer) as ERC721ReceiverMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721ReceiverMockInterface {
    return new utils.Interface(_abi) as ERC721ReceiverMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721ReceiverMock {
    return new Contract(address, _abi, signerOrProvider) as ERC721ReceiverMock;
  }
}
