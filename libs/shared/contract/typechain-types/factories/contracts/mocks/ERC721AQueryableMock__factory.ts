/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC721AQueryableMock,
  ERC721AQueryableMockInterface,
} from "../../../contracts/mocks/ERC721AQueryableMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidQueryRange",
    type: "error",
  },
  {
    inputs: [],
    name: "LockUntilMustBeUpperThanCurrentValue",
    type: "error",
  },
  {
    inputs: [],
    name: "LockUntilZero",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferLockedToken",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "explicitOwnershipOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "startTimestamp",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "burned",
            type: "bool",
          },
          {
            internalType: "uint24",
            name: "extraData",
            type: "uint24",
          },
        ],
        internalType: "struct IERC721A.TokenOwnership",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "explicitOwnershipsOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "startTimestamp",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "burned",
            type: "bool",
          },
          {
            internalType: "uint24",
            name: "extraData",
            type: "uint24",
          },
        ],
        internalType: "struct IERC721A.TokenOwnership[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "_lockUntil",
        type: "uint64",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "_lockUntil",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "lockTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lockUntil",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "tokensOfOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stop",
        type: "uint256",
      },
    ],
    name: "tokensOfOwnerIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162003344380380620033448339818101604052810190620000379190620001b6565b818181600290805190602001906200005192919062000094565b5080600390805190602001906200006a92919062000094565b506200007b6200008b60201b60201c565b6000819055505050505062000399565b60006001905090565b828054620000a290620002be565b90600052602060002090601f016020900481019282620000c6576000855562000112565b82601f10620000e157805160ff191683800117855562000112565b8280016001018555821562000112579182015b8281111562000111578251825591602001919060010190620000f4565b5b50905062000121919062000125565b5090565b5b808211156200014057600081600090555060010162000126565b5090565b60006200015b620001558462000252565b62000229565b9050828152602081018484840111156200017457600080fd5b6200018184828562000288565b509392505050565b600082601f8301126200019b57600080fd5b8151620001ad84826020860162000144565b91505092915050565b60008060408385031215620001ca57600080fd5b600083015167ffffffffffffffff811115620001e557600080fd5b620001f38582860162000189565b925050602083015167ffffffffffffffff8111156200021157600080fd5b6200021f8582860162000189565b9150509250929050565b60006200023562000248565b9050620002438282620002f4565b919050565b6000604051905090565b600067ffffffffffffffff82111562000270576200026f62000359565b5b6200027b8262000388565b9050602081019050919050565b60005b83811015620002a85780820151818401526020810190506200028b565b83811115620002b8576000848401525b50505050565b60006002820490506001821680620002d757607f821691505b60208210811415620002ee57620002ed6200032a565b5b50919050565b620002ff8262000388565b810181811067ffffffffffffffff8211171562000321576200032062000359565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b612f9b80620003a96000396000f3fe6080604052600436106101405760003560e01c80635bbb2177116100b6578063a14481941161006f578063a14481941461047d578063a22cb465146104a6578063b88d4fde146104cf578063c23dc68f146104eb578063c87b56dd14610528578063e985e9c51461056557610140565b80635bbb2177146103215780636352211e1461035e57806370a082311461039b5780638462151c146103d857806395d89b411461041557806399a2557a1461044057610140565b806318160ddd1161010857806318160ddd14610243578063201732921461026e57806323b872dd146102975780633efa9979146102b357806342842e0e146102dc57806342966c68146102f857610140565b806301ffc9a71461014557806306fdde0314610182578063081812fc146101ad578063095ea7b3146101ea5780630ceea30514610206575b600080fd5b34801561015157600080fd5b5061016c6004803603810190610167919061269a565b6105a2565b6040516101799190612ae0565b60405180910390f35b34801561018e57600080fd5b50610197610634565b6040516101a49190612afb565b60405180910390f35b3480156101b957600080fd5b506101d460048036038101906101cf91906126ec565b6106c6565b6040516101e19190612a35565b60405180910390f35b61020460048036038101906101ff91906125ca565b610745565b005b34801561021257600080fd5b5061022d600480360381019061022891906126ec565b610889565b60405161023a9190612b53565b60405180910390f35b34801561024f57600080fd5b506102586108b0565b6040516102659190612b38565b60405180910390f35b34801561027a57600080fd5b50610295600480360381019061029091906124ff565b6108c7565b005b6102b160048036038101906102ac9190612435565b6108e4565b005b3480156102bf57600080fd5b506102da60048036038101906102d59190612715565b610c09565b005b6102f660048036038101906102f19190612435565b610c95565b005b34801561030457600080fd5b5061031f600480360381019061031a91906126ec565b610cb5565b005b34801561032d57600080fd5b5061034860048036038101906103439190612655565b610cc3565b6040516103559190612a9c565b60405180910390f35b34801561036a57600080fd5b50610385600480360381019061038091906126ec565b610df8565b6040516103929190612a35565b60405180910390f35b3480156103a757600080fd5b506103c260048036038101906103bd91906123d0565b610e0a565b6040516103cf9190612b38565b60405180910390f35b3480156103e457600080fd5b506103ff60048036038101906103fa91906123d0565b610ec3565b60405161040c9190612abe565b60405180910390f35b34801561042157600080fd5b5061042a611059565b6040516104379190612afb565b60405180910390f35b34801561044c57600080fd5b5061046760048036038101906104629190612606565b6110eb565b6040516104749190612abe565b60405180910390f35b34801561048957600080fd5b506104a4600480360381019061049f91906125ca565b61134b565b005b3480156104b257600080fd5b506104cd60048036038101906104c8919061258e565b611359565b005b6104e960048036038101906104e49190612484565b611464565b005b3480156104f757600080fd5b50610512600480360381019061050d91906126ec565b6114d7565b60405161051f9190612b1d565b60405180910390f35b34801561053457600080fd5b5061054f600480360381019061054a91906126ec565b611541565b60405161055c9190612afb565b60405180910390f35b34801561057157600080fd5b5061058c600480360381019061058791906123f9565b6115e0565b6040516105999190612ae0565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806105fd57506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061062d5750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60606002805461064390612da8565b80601f016020809104026020016040519081016040528092919081815260200182805461066f90612da8565b80156106bc5780601f10610691576101008083540402835291602001916106bc565b820191906000526020600020905b81548152906001019060200180831161069f57829003601f168201915b5050505050905090565b60006106d182611674565b610707576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061075082610df8565b90508073ffffffffffffffffffffffffffffffffffffffff166107716116d3565b73ffffffffffffffffffffffffffffffffffffffff16146107d45761079d816107986116d3565b6115e0565b6107d3576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b826006600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b60086020528060005260406000206000915054906101000a900467ffffffffffffffff1681565b60006108ba6116db565b6001546000540303905090565b6108d385858584611464565b6108dd83836116e4565b5050505050565b60006108ef8261181b565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610956576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080610962846118e9565b9150915061097881876109736116d3565b611910565b6109c45761098d866109886116d3565b6115e0565b6109c3576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610a2b576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a388686866001611954565b8015610a4357600082555b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815460010191905081905550610b1185610aed888887611a39565b7c020000000000000000000000000000000000000000000000000000000017611a61565b600460008681526020019081526020016000208190555060007c020000000000000000000000000000000000000000000000000000000084161415610b99576000600185019050600060046000838152602001908152602001600020541415610b97576000548114610b96578360046000838152602001908152602001600020819055505b5b505b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610c018686866001611a8c565b505050505050565b6000610c1483610df8565b9050600080610c22856118e9565b91509150610c388184610c336116d3565b611910565b610c8457610c4d83610c486116d3565b6115e0565b610c83576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b610c8e85856116e4565b5050505050565b610cb083838360405180602001604052806000815250611464565b505050565b610cc0816001611a92565b50565b6060600083839050905060008167ffffffffffffffff811115610d0f577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610d4857816020015b610d35612251565b815260200190600190039081610d2d5790505b50905060005b828114610dec57610d9d868683818110610d91577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060200201356114d7565b828281518110610dd6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250806001019050610d4e565b50809250505092915050565b6000610e038261181b565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e72576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b60606000806000610ed385610e0a565b905060008167ffffffffffffffff811115610f17577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610f455781602001602082028036833780820191505090505b509050610f50612251565b6000610f5a6116db565b90505b83861461104b57610f6d81611ce6565b9150816040015115610f7e57611040565b600073ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff1614610fbe57816000015194505b8773ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141561103f5780838780600101985081518110611032577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250505b5b806001019050610f5d565b508195505050505050919050565b60606003805461106890612da8565b80601f016020809104026020016040519081016040528092919081815260200182805461109490612da8565b80156110e15780601f106110b6576101008083540402835291602001916110e1565b820191906000526020600020905b8154815290600101906020018083116110c457829003601f168201915b5050505050905090565b6060818310611126576040517f32c1995a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080611131611d11565b905061113b6116db565b85101561114d5761114a6116db565b94505b80841115611159578093505b600061116487610e0a565b905084861015611187576000868603905081811015611181578091505b5061118c565b600090505b60008167ffffffffffffffff8111156111ce577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156111fc5781602001602082028036833780820191505090505b50905060008214156112145780945050505050611344565b600061121f886114d7565b90506000816040015161123457816000015190505b60008990505b88811415801561124a5750848714155b156113365761125881611ce6565b92508260400151156112695761132b565b600073ffffffffffffffffffffffffffffffffffffffff16836000015173ffffffffffffffffffffffffffffffffffffffff16146112a957826000015191505b8a73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561132a578084888060010199508151811061131d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250505b5b80600101905061123a565b508583528296505050505050505b9392505050565b6113558282611d1a565b5050565b80600760006113666116d3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166114136116d3565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516114589190612ae0565b60405180910390a35050565b61146f8484846108e4565b60008373ffffffffffffffffffffffffffffffffffffffff163b146114d15761149a84848484611d38565b6114d0576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b6114df612251565b6114e7612251565b6114ef6116db565b83108061150357506114ff611d11565b8310155b15611511578091505061153c565b61151a83611ce6565b905080604001511561152f578091505061153c565b61153883611e98565b9150505b919050565b606061154c82611674565b611582576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061158c611eb8565b90506000815114156115ad57604051806020016040528060008152506115d8565b806115b784611ecf565b6040516020016115c8929190612a11565b6040516020818303038152906040525b915050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60008161167f6116db565b1115801561168e575060005482105b80156116cc575060007c0100000000000000000000000000000000000000000000000000000000600460008581526020019081526020016000205416145b9050919050565b600033905090565b60006001905090565b60008167ffffffffffffffff161415611729576040517fccfbd56600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006008600084815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff16141580156117a657506008600083815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff168167ffffffffffffffff1611155b156117dd576040517f92fe021400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806008600084815260200190815260200160002060006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505050565b6000808290508061182a6116db565b116118b2576000548110156118b15760006004600083815260200190815260200160002054905060007c0100000000000000000000000000000000000000000000000000000000821614156118af575b60008114156118a557600460008360019003935083815260200190815260200160002054905061187a565b80925050506118e4565b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b60008060006006600085815260200190815260200160002090508092508254915050915091565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b60005b81811015611a325760006008600083866119719190612c79565b815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff16141580156119e857506008600082856119b79190612c79565b815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff164211155b15611a1f576040517f750e912300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8080611a2a90612e0b565b915050611957565b5050505050565b60008060e883901c905060e8611a50868684611f28565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b6000611a9d8361181b565b90506000819050600080611ab0866118e9565b915091508415611b1957611acc8184611ac76116d3565b611910565b611b1857611ae183611adc6116d3565b6115e0565b611b17576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b5b611b27836000886001611954565b8015611b3257600082555b600160806001901b03600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550611bda83611b9785600088611a39565b7c02000000000000000000000000000000000000000000000000000000007c01000000000000000000000000000000000000000000000000000000001717611a61565b600460008881526020019081526020016000208190555060007c020000000000000000000000000000000000000000000000000000000085161415611c62576000600187019050600060046000838152602001908152602001600020541415611c60576000548114611c5f578460046000838152602001908152602001600020819055505b5b505b85600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4611ccc836000886001611a8c565b600160008154809291906001019190505550505050505050565b611cee612251565b611d0a6004600084815260200190815260200160002054611f31565b9050919050565b60008054905090565b611d34828260405180602001604052806000815250611fe7565b5050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611d5e6116d3565b8786866040518563ffffffff1660e01b8152600401611d809493929190612a50565b602060405180830381600087803b158015611d9a57600080fd5b505af1925050508015611dcb57506040513d601f19601f82011682018060405250810190611dc891906126c3565b60015b611e45573d8060008114611dfb576040519150601f19603f3d011682016040523d82523d6000602084013e611e00565b606091505b50600081511415611e3d576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b611ea0612251565b611eb1611eac8361181b565b611f31565b9050919050565b606060405180602001604052806000815250905090565b606060a060405101806040526020810391506000825281835b600115611f1357600184039350600a81066030018453600a8104905080611f0e57611f13565b611ee8565b50828103602084039350808452505050919050565b60009392505050565b611f39612251565b81816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060a082901c816020019067ffffffffffffffff16908167ffffffffffffffff168152505060007c01000000000000000000000000000000000000000000000000000000008316141581604001901515908115158152505060e882901c816060019062ffffff16908162ffffff1681525050919050565b611ff18383612084565b60008373ffffffffffffffffffffffffffffffffffffffff163b1461207f57600080549050600083820390505b6120316000868380600101945086611d38565b612067576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81811061201e57816000541461207c57600080fd5b50505b505050565b60008054905060008214156120c5576040517fb562e8dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6120d26000848385611954565b600160406001901b178202600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506121498361213a6000866000611a39565b61214385612241565b17611a61565b6004600083815260200190815260200160002081905550600080838301905073ffffffffffffffffffffffffffffffffffffffff85169150828260007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600183015b8181146121ea57808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a46001810190506121af565b506000821415612226576040517f2e07630000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600081905550505061223c6000848385611a8c565b505050565b60006001821460e11b9050919050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff168152602001600015158152602001600062ffffff1681525090565b60006122b36122ae84612b93565b612b6e565b9050828152602081018484840111156122cb57600080fd5b6122d6848285612d66565b509392505050565b6000813590506122ed81612ef2565b92915050565b60008083601f84011261230557600080fd5b8235905067ffffffffffffffff81111561231e57600080fd5b60208301915083602082028301111561233657600080fd5b9250929050565b60008135905061234c81612f09565b92915050565b60008135905061236181612f20565b92915050565b60008151905061237681612f20565b92915050565b600082601f83011261238d57600080fd5b813561239d8482602086016122a0565b91505092915050565b6000813590506123b581612f37565b92915050565b6000813590506123ca81612f4e565b92915050565b6000602082840312156123e257600080fd5b60006123f0848285016122de565b91505092915050565b6000806040838503121561240c57600080fd5b600061241a858286016122de565b925050602061242b858286016122de565b9150509250929050565b60008060006060848603121561244a57600080fd5b6000612458868287016122de565b9350506020612469868287016122de565b925050604061247a868287016123a6565b9150509250925092565b6000806000806080858703121561249a57600080fd5b60006124a8878288016122de565b94505060206124b9878288016122de565b93505060406124ca878288016123a6565b925050606085013567ffffffffffffffff8111156124e757600080fd5b6124f38782880161237c565b91505092959194509250565b600080600080600060a0868803121561251757600080fd5b6000612525888289016122de565b9550506020612536888289016122de565b9450506040612547888289016123a6565b9350506060612558888289016123bb565b925050608086013567ffffffffffffffff81111561257557600080fd5b6125818882890161237c565b9150509295509295909350565b600080604083850312156125a157600080fd5b60006125af858286016122de565b92505060206125c08582860161233d565b9150509250929050565b600080604083850312156125dd57600080fd5b60006125eb858286016122de565b92505060206125fc858286016123a6565b9150509250929050565b60008060006060848603121561261b57600080fd5b6000612629868287016122de565b935050602061263a868287016123a6565b925050604061264b868287016123a6565b9150509250925092565b6000806020838503121561266857600080fd5b600083013567ffffffffffffffff81111561268257600080fd5b61268e858286016122f3565b92509250509250929050565b6000602082840312156126ac57600080fd5b60006126ba84828501612352565b91505092915050565b6000602082840312156126d557600080fd5b60006126e384828501612367565b91505092915050565b6000602082840312156126fe57600080fd5b600061270c848285016123a6565b91505092915050565b6000806040838503121561272857600080fd5b6000612736858286016123a6565b9250506020612747858286016123bb565b9150509250929050565b600061275d838361291c565b60808301905092915050565b600061277583836129d5565b60208301905092915050565b61278a81612ccf565b82525050565b61279981612ccf565b82525050565b60006127aa82612be4565b6127b48185612c2a565b93506127bf83612bc4565b8060005b838110156127f05781516127d78882612751565b97506127e283612c10565b9250506001810190506127c3565b5085935050505092915050565b600061280882612bef565b6128128185612c3b565b935061281d83612bd4565b8060005b8381101561284e5781516128358882612769565b975061284083612c1d565b925050600181019050612821565b5085935050505092915050565b61286481612ce1565b82525050565b61287381612ce1565b82525050565b600061288482612bfa565b61288e8185612c4c565b935061289e818560208601612d75565b6128a781612ee1565b840191505092915050565b60006128bd82612c05565b6128c78185612c5d565b93506128d7818560208601612d75565b6128e081612ee1565b840191505092915050565b60006128f682612c05565b6129008185612c6e565b9350612910818560208601612d75565b80840191505092915050565b6080820160008201516129326000850182612781565b50602082015161294560208501826129f3565b506040820151612958604085018261285b565b50606082015161296b60608501826129c6565b50505050565b6080820160008201516129876000850182612781565b50602082015161299a60208501826129f3565b5060408201516129ad604085018261285b565b5060608201516129c060608501826129c6565b50505050565b6129cf81612d39565b82525050565b6129de81612d48565b82525050565b6129ed81612d48565b82525050565b6129fc81612d52565b82525050565b612a0b81612d52565b82525050565b6000612a1d82856128eb565b9150612a2982846128eb565b91508190509392505050565b6000602082019050612a4a6000830184612790565b92915050565b6000608082019050612a656000830187612790565b612a726020830186612790565b612a7f60408301856129e4565b8181036060830152612a918184612879565b905095945050505050565b60006020820190508181036000830152612ab6818461279f565b905092915050565b60006020820190508181036000830152612ad881846127fd565b905092915050565b6000602082019050612af5600083018461286a565b92915050565b60006020820190508181036000830152612b1581846128b2565b905092915050565b6000608082019050612b326000830184612971565b92915050565b6000602082019050612b4d60008301846129e4565b92915050565b6000602082019050612b686000830184612a02565b92915050565b6000612b78612b89565b9050612b848282612dda565b919050565b6000604051905090565b600067ffffffffffffffff821115612bae57612bad612eb2565b5b612bb782612ee1565b9050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000612c8482612d48565b9150612c8f83612d48565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612cc457612cc3612e54565b5b828201905092915050565b6000612cda82612d19565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015612d93578082015181840152602081019050612d78565b83811115612da2576000848401525b50505050565b60006002820490506001821680612dc057607f821691505b60208210811415612dd457612dd3612e83565b5b50919050565b612de382612ee1565b810181811067ffffffffffffffff82111715612e0257612e01612eb2565b5b80604052505050565b6000612e1682612d48565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612e4957612e48612e54565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b612efb81612ccf565b8114612f0657600080fd5b50565b612f1281612ce1565b8114612f1d57600080fd5b50565b612f2981612ced565b8114612f3457600080fd5b50565b612f4081612d48565b8114612f4b57600080fd5b50565b612f5781612d52565b8114612f6257600080fd5b5056fea26469706673582212200344cbe3d44ede6e0dfef678814619b41941685910198de6fde22bf5a9d2135764736f6c63430008040033";

type ERC721AQueryableMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721AQueryableMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721AQueryableMock__factory extends ContractFactory {
  constructor(...args: ERC721AQueryableMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721AQueryableMock> {
    return super.deploy(
      name_,
      symbol_,
      overrides || {}
    ) as Promise<ERC721AQueryableMock>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override attach(address: string): ERC721AQueryableMock {
    return super.attach(address) as ERC721AQueryableMock;
  }
  override connect(signer: Signer): ERC721AQueryableMock__factory {
    return super.connect(signer) as ERC721AQueryableMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721AQueryableMockInterface {
    return new utils.Interface(_abi) as ERC721AQueryableMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721AQueryableMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC721AQueryableMock;
  }
}
