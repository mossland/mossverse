/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC721ATransferCounterMock,
  ERC721ATransferCounterMockInterface,
} from "../../../contracts/mocks/ERC721ATransferCounterMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "LockUntilMustBeUpperThanCurrentValue",
    type: "error",
  },
  {
    inputs: [],
    name: "LockUntilZero",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferLockedToken",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "approvalCheck",
        type: "bool",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getAux",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getOwnershipAt",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "startTimestamp",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "burned",
            type: "bool",
          },
          {
            internalType: "uint24",
            name: "extraData",
            type: "uint24",
          },
        ],
        internalType: "struct IERC721A.TokenOwnership",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getOwnershipOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "startTimestamp",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "burned",
            type: "bool",
          },
          {
            internalType: "uint24",
            name: "extraData",
            type: "uint24",
          },
        ],
        internalType: "struct IERC721A.TokenOwnership",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "initializeOwnershipAt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "_lockUntil",
        type: "uint64",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "_lockUntil",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "lockTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lockUntil",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "numberMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "aux",
        type: "uint64",
      },
    ],
    name: "setAux",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint24",
        name: "extraData",
        type: "uint24",
      },
    ],
    name: "setExtraDataAt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "toString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalBurned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162003323380380620033238339818101604052810190620000379190620001ba565b8181818181600290805190602001906200005392919062000098565b5080600390805190602001906200006c92919062000098565b506200007d6200008f60201b60201c565b6000819055505050505050506200039d565b60006001905090565b828054620000a690620002c2565b90600052602060002090601f016020900481019282620000ca576000855562000116565b82601f10620000e557805160ff191683800117855562000116565b8280016001018555821562000116579182015b8281111562000115578251825591602001919060010190620000f8565b5b50905062000125919062000129565b5090565b5b80821115620001445760008160009055506001016200012a565b5090565b60006200015f620001598462000256565b6200022d565b9050828152602081018484840111156200017857600080fd5b620001858482856200028c565b509392505050565b600082601f8301126200019f57600080fd5b8151620001b184826020860162000148565b91505092915050565b60008060408385031215620001ce57600080fd5b600083015167ffffffffffffffff811115620001e957600080fd5b620001f7858286016200018d565b925050602083015167ffffffffffffffff8111156200021557600080fd5b62000223858286016200018d565b9150509250929050565b6000620002396200024c565b9050620002478282620002f8565b919050565b6000604051905090565b600067ffffffffffffffff8211156200027457620002736200035d565b5b6200027f826200038c565b9050602081019050919050565b60005b83811015620002ac5780820151818401526020810190506200028f565b83811115620002bc576000848401525b50505050565b60006002820490506001821680620002db57607f821691505b60208210811415620002f257620002f16200032e565b5b50919050565b62000303826200038c565b810181811067ffffffffffffffff821117156200032557620003246200035d565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b612f7680620003ad6000396000f3fe6080604052600436106102045760003560e01c80636352211e11610118578063a22cb465116100a0578063c87b56dd1161006f578063c87b56dd14610763578063d89135cd146107a0578063dc33e681146107cb578063e985e9c514610808578063f25236331461084557610204565b8063a22cb465146106b6578063a2309ff8146106df578063b88d4fde1461070a578063bf0b175e1461072657610204565b806375794a3c116100e757806375794a3c146105e55780638832e6e31461061057806395d89b41146106395780639fac68cb14610664578063a14481941461068d57610204565b80636352211e146105035780636900a3ae146105405780636c0360eb1461057d57806370a08231146105a857610204565b806323b872dd1161019b57806342966c681161016a57806342966c681461040e578063453ab141146104375780634f558e791461046057806352d8a4d11461049d57806353b1233d146104da57610204565b806323b872dd146103845780633efa9979146103a057806340c10f19146103c957806342842e0e146103f257610204565b80630a70b566116101d75780630a70b566146102ca5780630ceea305146102f357806318160ddd14610330578063201732921461035b57610204565b806301ffc9a71461020957806306fdde0314610246578063081812fc14610271578063095ea7b3146102ae575b600080fd5b34801561021557600080fd5b50610230600480360381019061022b91906127b3565b610882565b60405161023d9190612add565b60405180910390f35b34801561025257600080fd5b5061025b610914565b6040516102689190612af8565b60405180910390f35b34801561027d57600080fd5b5061029860048036038101906102939190612805565b6109a6565b6040516102a59190612a76565b60405180910390f35b6102c860048036038101906102c391906126d4565b610a25565b005b3480156102d657600080fd5b506102f160048036038101906102ec919061286a565b610b69565b005b3480156102ff57600080fd5b5061031a60048036038101906103159190612805565b610b77565b6040516103279190612b50565b60405180910390f35b34801561033c57600080fd5b50610345610b9e565b6040516103529190612b35565b60405180910390f35b34801561036757600080fd5b50610382600480360381019061037d9190612609565b610bb5565b005b61039e6004803603810190610399919061253f565b610bd2565b005b3480156103ac57600080fd5b506103c760048036038101906103c291906128a6565b610ef7565b005b3480156103d557600080fd5b506103f060048036038101906103eb91906126d4565b610f83565b005b61040c6004803603810190610407919061253f565b610f91565b005b34801561041a57600080fd5b5061043560048036038101906104309190612805565b610fb1565b005b34801561044357600080fd5b5061045e60048036038101906104599190612777565b610fbd565b005b34801561046c57600080fd5b5061048760048036038101906104829190612805565b610fcb565b6040516104949190612add565b60405180910390f35b3480156104a957600080fd5b506104c460048036038101906104bf9190612805565b610fdd565b6040516104d19190612b1a565b60405180910390f35b3480156104e657600080fd5b5061050160048036038101906104fc9190612805565b610ff5565b005b34801561050f57600080fd5b5061052a60048036038101906105259190612805565b611001565b6040516105379190612a76565b60405180910390f35b34801561054c57600080fd5b5061056760048036038101906105629190612805565b611013565b6040516105749190612af8565b60405180910390f35b34801561058957600080fd5b50610592611025565b60405161059f9190612af8565b60405180910390f35b3480156105b457600080fd5b506105cf60048036038101906105ca91906124da565b611034565b6040516105dc9190612b35565b60405180910390f35b3480156105f157600080fd5b506105fa6110ed565b6040516106079190612b35565b60405180910390f35b34801561061c57600080fd5b5061063760048036038101906106329190612710565b6110fc565b005b34801561064557600080fd5b5061064e61110c565b60405161065b9190612af8565b60405180910390f35b34801561067057600080fd5b5061068b6004803603810190610686919061282e565b61119e565b005b34801561069957600080fd5b506106b460048036038101906106af91906126d4565b6111ac565b005b3480156106c257600080fd5b506106dd60048036038101906106d89190612698565b6111ba565b005b3480156106eb57600080fd5b506106f46112c5565b6040516107019190612b35565b60405180910390f35b610724600480360381019061071f919061258e565b6112d4565b005b34801561073257600080fd5b5061074d600480360381019061074891906124da565b611347565b60405161075a9190612b50565b60405180910390f35b34801561076f57600080fd5b5061078a60048036038101906107859190612805565b611359565b6040516107979190612af8565b60405180910390f35b3480156107ac57600080fd5b506107b56113f8565b6040516107c29190612b35565b60405180910390f35b3480156107d757600080fd5b506107f260048036038101906107ed91906124da565b611407565b6040516107ff9190612b35565b60405180910390f35b34801561081457600080fd5b5061082f600480360381019061082a9190612503565b611419565b60405161083c9190612add565b60405180910390f35b34801561085157600080fd5b5061086c60048036038101906108679190612805565b6114ad565b6040516108799190612b1a565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806108dd57506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061090d5750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60606002805461092390612d6c565b80601f016020809104026020016040519081016040528092919081815260200182805461094f90612d6c565b801561099c5780601f106109715761010080835404028352916020019161099c565b820191906000526020600020905b81548152906001019060200180831161097f57829003601f168201915b5050505050905090565b60006109b1826114c5565b6109e7576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610a3082611001565b90508073ffffffffffffffffffffffffffffffffffffffff16610a51611524565b73ffffffffffffffffffffffffffffffffffffffff1614610ab457610a7d81610a78611524565b611419565b610ab3576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b826006600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b610b73828261152c565b5050565b60086020528060005260406000206000915054906101000a900467ffffffffffffffff1681565b6000610ba86115c9565b6001546000540303905090565b610bc1858585846112d4565b610bcb83836115d2565b5050505050565b6000610bdd82611709565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c44576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080610c50846117d7565b91509150610c668187610c61611524565b6117fe565b610cb257610c7b86610c76611524565b611419565b610cb1576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610d19576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d268686866001611842565b8015610d3157600082555b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815460010191905081905550610dff85610ddb888887611927565b7c02000000000000000000000000000000000000000000000000000000001761194f565b600460008681526020019081526020016000208190555060007c020000000000000000000000000000000000000000000000000000000084161415610e87576000600185019050600060046000838152602001908152602001600020541415610e85576000548114610e84578360046000838152602001908152602001600020819055505b5b505b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610eef868686600161197a565b505050505050565b6000610f0283611001565b9050600080610f10856117d7565b91509150610f268184610f21611524565b6117fe565b610f7257610f3b83610f36611524565b611419565b610f71576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b610f7c85856115d2565b5050505050565b610f8d8282611980565b5050565b610fac838383604051806020016040528060008152506112d4565b505050565b610fba81611b3d565b50565b610fc78282611b4b565b5050565b6000610fd6826114c5565b9050919050565b610fe5612390565b610fee82611c01565b9050919050565b610ffe81611c21565b50565b600061100c82611709565b9050919050565b606061101e82611c61565b9050919050565b606061102f611cba565b905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561109c576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b60006110f7611cd1565b905090565b611107838383611cda565b505050565b60606003805461111b90612d6c565b80601f016020809104026020016040519081016040528092919081815260200182805461114790612d6c565b80156111945780601f1061116957610100808354040283529160200191611194565b820191906000526020600020905b81548152906001019060200180831161117757829003601f168201915b5050505050905090565b6111a88282611d77565b5050565b6111b68282611fcb565b5050565b80600760006111c7611524565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16611274611524565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516112b99190612add565b60405180910390a35050565b60006112cf611fe9565b905090565b6112df848484610bd2565b60008373ffffffffffffffffffffffffffffffffffffffff163b146113415761130a84848484611ffc565b611340576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b60006113528261215c565b9050919050565b6060611364826114c5565b61139a576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006113a4611cba565b90506000815114156113c557604051806020016040528060008152506113f0565b806113cf84611c61565b6040516020016113e0929190612a52565b6040516020818303038152906040525b915050919050565b60006114026121a9565b905090565b6000611412826121b3565b9050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6114b5612390565b6114be8261220a565b9050919050565b6000816114d06115c9565b111580156114df575060005482105b801561151d575060007c0100000000000000000000000000000000000000000000000000000000600460008581526020019081526020016000205416145b9050919050565b600033905090565b600060046000848152602001908152602001600020549050600081141561157e576040517ed5815300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082905060e881901b7cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831617915081600460008681526020019081526020016000208190555050505050565b60006001905090565b60008167ffffffffffffffff161415611617576040517fccfbd56600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006008600084815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff161415801561169457506008600083815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff168167ffffffffffffffff1611155b156116cb576040517f92fe021400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806008600084815260200190815260200160002060006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505050565b600080829050806117186115c9565b116117a05760005481101561179f5760006004600083815260200190815260200160002054905060007c01000000000000000000000000000000000000000000000000000000008216141561179d575b6000811415611793576004600083600190039350838152602001908152602001600020549050611768565b80925050506117d2565b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b60008060006006600085815260200190815260200160002090508092508254915050915091565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b60005b8181101561192057600060086000838661185f9190612c3d565b815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff16141580156118d657506008600082856118a59190612c3d565b815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff164211155b1561190d576040517f750e912300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b808061191890612dcf565b915050611845565b5050505050565b60008060e883901c905060e861193e868684612235565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b60008054905060008214156119c1576040517fb562e8dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6119ce6000848385611842565b600160406001901b178202600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550611a4583611a366000866000611927565b611a3f856122ca565b1761194f565b6004600083815260200190815260200160002081905550600080838301905073ffffffffffffffffffffffffffffffffffffffff85169150828260007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600183015b818114611ae657808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600181019050611aab565b506000821415611b22576040517f2e07630000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000819055505050611b38600084838561197a565b505050565b611b48816000611d77565b50565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600082905060c081901b77ffffffffffffffffffffffffffffffffffffffffffffffff831617915081600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050565b611c09612390565b611c1a611c1583611709565b6122da565b9050919050565b600060046000838152602001908152602001600020541415611c5e57611c4681611709565b60046000838152602001908152602001600020819055505b50565b606060a060405101806040526020810391506000825281835b600115611ca557600184039350600a81066030018453600a8104905080611ca057611ca5565b611c7a565b50828103602084039350808452505050919050565b606060405180602001604052806000815250905090565b60008054905090565b611ce48383611980565b60008373ffffffffffffffffffffffffffffffffffffffff163b14611d7257600080549050600083820390505b611d246000868380600101945086611ffc565b611d5a576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b818110611d11578160005414611d6f57600080fd5b50505b505050565b6000611d8283611709565b90506000819050600080611d95866117d7565b915091508415611dfe57611db18184611dac611524565b6117fe565b611dfd57611dc683611dc1611524565b611419565b611dfc576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b5b611e0c836000886001611842565b8015611e1757600082555b600160806001901b03600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550611ebf83611e7c85600088611927565b7c02000000000000000000000000000000000000000000000000000000007c0100000000000000000000000000000000000000000000000000000000171761194f565b600460008881526020019081526020016000208190555060007c020000000000000000000000000000000000000000000000000000000085161415611f47576000600187019050600060046000838152602001908152602001600020541415611f45576000548114611f44578460046000838152602001908152602001600020819055505b5b505b85600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4611fb183600088600161197a565b600160008154809291906001019190505550505050505050565b611fe5828260405180602001604052806000815250611cda565b5050565b6000611ff36115c9565b60005403905090565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a02612022611524565b8786866040518563ffffffff1660e01b81526004016120449493929190612a91565b602060405180830381600087803b15801561205e57600080fd5b505af192505050801561208f57506040513d601f19601f8201168201806040525081019061208c91906127dc565b60015b612109573d80600081146120bf576040519150601f19603f3d011682016040523d82523d6000602084013e6120c4565b606091505b50600081511415612101576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b600060c0600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054901c9050919050565b6000600154905090565b600067ffffffffffffffff6040600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054901c169050919050565b612212612390565b61222e60046000848152602001908152602001600020546122da565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561227457602a90506122c3565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156122b35761053990506122c3565b6001826122c09190612c04565b90505b9392505050565b60006001821460e11b9050919050565b6122e2612390565b81816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060a082901c816020019067ffffffffffffffff16908167ffffffffffffffff168152505060007c01000000000000000000000000000000000000000000000000000000008316141581604001901515908115158152505060e882901c816060019062ffffff16908162ffffff1681525050919050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff168152602001600015158152602001600062ffffff1681525090565b60006123f26123ed84612b90565b612b6b565b90508281526020810184848401111561240a57600080fd5b612415848285612d2a565b509392505050565b60008135905061242c81612eb6565b92915050565b60008135905061244181612ecd565b92915050565b60008135905061245681612ee4565b92915050565b60008151905061246b81612ee4565b92915050565b600082601f83011261248257600080fd5b81356124928482602086016123df565b91505092915050565b6000813590506124aa81612efb565b92915050565b6000813590506124bf81612f12565b92915050565b6000813590506124d481612f29565b92915050565b6000602082840312156124ec57600080fd5b60006124fa8482850161241d565b91505092915050565b6000806040838503121561251657600080fd5b60006125248582860161241d565b92505060206125358582860161241d565b9150509250929050565b60008060006060848603121561255457600080fd5b60006125628682870161241d565b93505060206125738682870161241d565b9250506040612584868287016124b0565b9150509250925092565b600080600080608085870312156125a457600080fd5b60006125b28782880161241d565b94505060206125c38782880161241d565b93505060406125d4878288016124b0565b925050606085013567ffffffffffffffff8111156125f157600080fd5b6125fd87828801612471565b91505092959194509250565b600080600080600060a0868803121561262157600080fd5b600061262f8882890161241d565b95505060206126408882890161241d565b9450506040612651888289016124b0565b9350506060612662888289016124c5565b925050608086013567ffffffffffffffff81111561267f57600080fd5b61268b88828901612471565b9150509295509295909350565b600080604083850312156126ab57600080fd5b60006126b98582860161241d565b92505060206126ca85828601612432565b9150509250929050565b600080604083850312156126e757600080fd5b60006126f58582860161241d565b9250506020612706858286016124b0565b9150509250929050565b60008060006060848603121561272557600080fd5b60006127338682870161241d565b9350506020612744868287016124b0565b925050604084013567ffffffffffffffff81111561276157600080fd5b61276d86828701612471565b9150509250925092565b6000806040838503121561278a57600080fd5b60006127988582860161241d565b92505060206127a9858286016124c5565b9150509250929050565b6000602082840312156127c557600080fd5b60006127d384828501612447565b91505092915050565b6000602082840312156127ee57600080fd5b60006127fc8482850161245c565b91505092915050565b60006020828403121561281757600080fd5b6000612825848285016124b0565b91505092915050565b6000806040838503121561284157600080fd5b600061284f858286016124b0565b925050602061286085828601612432565b9150509250929050565b6000806040838503121561287d57600080fd5b600061288b858286016124b0565b925050602061289c8582860161249b565b9150509250929050565b600080604083850312156128b957600080fd5b60006128c7858286016124b0565b92505060206128d8858286016124c5565b9150509250929050565b6128eb81612c93565b82525050565b6128fa81612c93565b82525050565b61290981612ca5565b82525050565b61291881612ca5565b82525050565b600061292982612bc1565b6129338185612bd7565b9350612943818560208601612d39565b61294c81612ea5565b840191505092915050565b600061296282612bcc565b61296c8185612be8565b935061297c818560208601612d39565b61298581612ea5565b840191505092915050565b600061299b82612bcc565b6129a58185612bf9565b93506129b5818560208601612d39565b80840191505092915050565b6080820160008201516129d760008501826128e2565b5060208201516129ea6020850182612a34565b5060408201516129fd6040850182612900565b506060820151612a106060850182612a16565b50505050565b612a1f81612cfd565b82525050565b612a2e81612d0c565b82525050565b612a3d81612d16565b82525050565b612a4c81612d16565b82525050565b6000612a5e8285612990565b9150612a6a8284612990565b91508190509392505050565b6000602082019050612a8b60008301846128f1565b92915050565b6000608082019050612aa660008301876128f1565b612ab360208301866128f1565b612ac06040830185612a25565b8181036060830152612ad2818461291e565b905095945050505050565b6000602082019050612af2600083018461290f565b92915050565b60006020820190508181036000830152612b128184612957565b905092915050565b6000608082019050612b2f60008301846129c1565b92915050565b6000602082019050612b4a6000830184612a25565b92915050565b6000602082019050612b656000830184612a43565b92915050565b6000612b75612b86565b9050612b818282612d9e565b919050565b6000604051905090565b600067ffffffffffffffff821115612bab57612baa612e76565b5b612bb482612ea5565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000612c0f82612cfd565b9150612c1a83612cfd565b92508262ffffff03821115612c3257612c31612e18565b5b828201905092915050565b6000612c4882612d0c565b9150612c5383612d0c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612c8857612c87612e18565b5b828201905092915050565b6000612c9e82612cdd565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015612d57578082015181840152602081019050612d3c565b83811115612d66576000848401525b50505050565b60006002820490506001821680612d8457607f821691505b60208210811415612d9857612d97612e47565b5b50919050565b612da782612ea5565b810181811067ffffffffffffffff82111715612dc657612dc5612e76565b5b80604052505050565b6000612dda82612d0c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612e0d57612e0c612e18565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b612ebf81612c93565b8114612eca57600080fd5b50565b612ed681612ca5565b8114612ee157600080fd5b50565b612eed81612cb1565b8114612ef857600080fd5b50565b612f0481612cfd565b8114612f0f57600080fd5b50565b612f1b81612d0c565b8114612f2657600080fd5b50565b612f3281612d16565b8114612f3d57600080fd5b5056fea2646970667358221220bd7f9b6dba694098c7e895160cfcf0c25d2a352e0e4a11c8aff547ca27f63be464736f6c63430008040033";

type ERC721ATransferCounterMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721ATransferCounterMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721ATransferCounterMock__factory extends ContractFactory {
  constructor(...args: ERC721ATransferCounterMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721ATransferCounterMock> {
    return super.deploy(
      name_,
      symbol_,
      overrides || {}
    ) as Promise<ERC721ATransferCounterMock>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override attach(address: string): ERC721ATransferCounterMock {
    return super.attach(address) as ERC721ATransferCounterMock;
  }
  override connect(signer: Signer): ERC721ATransferCounterMock__factory {
    return super.connect(signer) as ERC721ATransferCounterMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721ATransferCounterMockInterface {
    return new utils.Interface(_abi) as ERC721ATransferCounterMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721ATransferCounterMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC721ATransferCounterMock;
  }
}
