/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC721ABurnableStartTokenIdMock,
  ERC721ABurnableStartTokenIdMockInterface,
} from "../../../contracts/mocks/ERC721ABurnableStartTokenIdMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "startTokenId_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "LockUntilMustBeUpperThanCurrentValue",
    type: "error",
  },
  {
    inputs: [],
    name: "LockUntilZero",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferLockedToken",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getOwnershipAt",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "startTimestamp",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "burned",
            type: "bool",
          },
          {
            internalType: "uint24",
            name: "extraData",
            type: "uint24",
          },
        ],
        internalType: "struct IERC721A.TokenOwnership",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "_lockUntil",
        type: "uint64",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "_lockUntil",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "lockTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lockUntil",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "numberBurned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalBurned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002c4038038062002c408339818101604052810190620000379190620001db565b8282818184806000819055505081600390805190602001906200005c929190620000a2565b50806004908051906020019062000075929190620000a2565b50620000866200009960201b60201c565b60018190555050505050505050620003f7565b60008054905090565b828054620000b09062000302565b90600052602060002090601f016020900481019282620000d4576000855562000120565b82601f10620000ef57805160ff191683800117855562000120565b8280016001018555821562000120579182015b828111156200011f57825182559160200191906001019062000102565b5b5090506200012f919062000133565b5090565b5b808211156200014e57600081600090555060010162000134565b5090565b60006200016962000163846200028c565b62000263565b9050828152602081018484840111156200018257600080fd5b6200018f848285620002cc565b509392505050565b600082601f830112620001a957600080fd5b8151620001bb84826020860162000152565b91505092915050565b600081519050620001d581620003dd565b92915050565b600080600060608486031215620001f157600080fd5b600084015167ffffffffffffffff8111156200020c57600080fd5b6200021a8682870162000197565b935050602084015167ffffffffffffffff8111156200023857600080fd5b620002468682870162000197565b92505060406200025986828701620001c4565b9150509250925092565b60006200026f62000282565b90506200027d828262000338565b919050565b6000604051905090565b600067ffffffffffffffff821115620002aa57620002a96200039d565b5b620002b582620003cc565b9050602081019050919050565b6000819050919050565b60005b83811015620002ec578082015181840152602081019050620002cf565b83811115620002fc576000848401525b50505050565b600060028204905060018216806200031b57607f821691505b602082108114156200033257620003316200036e565b5b50919050565b6200034382620003cc565b810181811067ffffffffffffffff821117156200036557620003646200039d565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b620003e881620002c2565b8114620003f457600080fd5b50565b61283980620004076000396000f3fe6080604052600436106101665760003560e01c80634f558e79116100d1578063a2309ff81161008a578063d89135cd11610064578063d89135cd1461053c578063e6798baa14610567578063e985e9c514610592578063f2523633146105cf57610166565b8063a2309ff8146104b8578063b88d4fde146104e3578063c87b56dd146104ff57610166565b80634f558e79146103845780636352211e146103c157806370a08231146103fe57806395d89b411461043b578063a144819414610466578063a22cb4651461048f57610166565b80632017329211610123578063201732921461029457806323b872dd146102bd5780632478d639146102d95780633efa99791461031657806342842e0e1461033f57806342966c681461035b57610166565b806301ffc9a71461016b57806306fdde03146101a8578063081812fc146101d3578063095ea7b3146102105780630ceea3051461022c57806318160ddd14610269575b600080fd5b34801561017757600080fd5b50610192600480360381019061018d919061213e565b61060c565b60405161019f91906123f0565b60405180910390f35b3480156101b457600080fd5b506101bd61069e565b6040516101ca919061240b565b60405180910390f35b3480156101df57600080fd5b506101fa60048036038101906101f59190612190565b610730565b6040516102079190612389565b60405180910390f35b61022a60048036038101906102259190612102565b6107af565b005b34801561023857600080fd5b50610253600480360381019061024e9190612190565b6108f3565b6040516102609190612463565b60405180910390f35b34801561027557600080fd5b5061027e61091a565b60405161028b9190612448565b60405180910390f35b3480156102a057600080fd5b506102bb60048036038101906102b69190612037565b610931565b005b6102d760048036038101906102d29190611f6d565b61094e565b005b3480156102e557600080fd5b5061030060048036038101906102fb9190611f08565b610c73565b60405161030d9190612448565b60405180910390f35b34801561032257600080fd5b5061033d600480360381019061033891906121b9565b610c85565b005b61035960048036038101906103549190611f6d565b610d11565b005b34801561036757600080fd5b50610382600480360381019061037d9190612190565b610d31565b005b34801561039057600080fd5b506103ab60048036038101906103a69190612190565b610d3f565b6040516103b891906123f0565b60405180910390f35b3480156103cd57600080fd5b506103e860048036038101906103e39190612190565b610d51565b6040516103f59190612389565b60405180910390f35b34801561040a57600080fd5b5061042560048036038101906104209190611f08565b610d63565b6040516104329190612448565b60405180910390f35b34801561044757600080fd5b50610450610e1c565b60405161045d919061240b565b60405180910390f35b34801561047257600080fd5b5061048d60048036038101906104889190612102565b610eae565b005b34801561049b57600080fd5b506104b660048036038101906104b191906120c6565b610ebc565b005b3480156104c457600080fd5b506104cd610fc7565b6040516104da9190612448565b60405180910390f35b6104fd60048036038101906104f89190611fbc565b610fd6565b005b34801561050b57600080fd5b5061052660048036038101906105219190612190565b611049565b604051610533919061240b565b60405180910390f35b34801561054857600080fd5b506105516110e8565b60405161055e9190612448565b60405180910390f35b34801561057357600080fd5b5061057c6110f7565b6040516105899190612448565b60405180910390f35b34801561059e57600080fd5b506105b960048036038101906105b49190611f31565b6110fd565b6040516105c691906123f0565b60405180910390f35b3480156105db57600080fd5b506105f660048036038101906105f19190612190565b611191565b604051610603919061242d565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061066757506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806106975750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6060600380546106ad90612646565b80601f01602080910402602001604051908101604052809291908181526020018280546106d990612646565b80156107265780601f106106fb57610100808354040283529160200191610726565b820191906000526020600020905b81548152906001019060200180831161070957829003601f168201915b5050505050905090565b600061073b826111a9565b610771576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6007600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006107ba82610d51565b90508073ffffffffffffffffffffffffffffffffffffffff166107db611208565b73ffffffffffffffffffffffffffffffffffffffff161461083e5761080781610802611208565b6110fd565b61083d576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b826007600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b60096020528060005260406000206000915054906101000a900467ffffffffffffffff1681565b6000610924611210565b6002546001540303905090565b61093d85858584610fd6565b6109478383611219565b5050505050565b600061095982611350565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146109c0576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806109cc8461141e565b915091506109e281876109dd611208565b611445565b610a2e576109f7866109f2611208565b6110fd565b610a2d576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610a95576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610aa28686866001611489565b8015610aad57600082555b600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815460010191905081905550610b7b85610b5788888761156e565b7c020000000000000000000000000000000000000000000000000000000017611596565b600560008681526020019081526020016000208190555060007c020000000000000000000000000000000000000000000000000000000084161415610c03576000600185019050600060056000838152602001908152602001600020541415610c01576001548114610c00578360056000838152602001908152602001600020819055505b5b505b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610c6b86868660016115c1565b505050505050565b6000610c7e826115c7565b9050919050565b6000610c9083610d51565b9050600080610c9e8561141e565b91509150610cb48184610caf611208565b611445565b610d0057610cc983610cc4611208565b6110fd565b610cff576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b610d0a8585611219565b5050505050565b610d2c83838360405180602001604052806000815250610fd6565b505050565b610d3c81600161161e565b50565b6000610d4a826111a9565b9050919050565b6000610d5c82611350565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610dcb576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b606060048054610e2b90612646565b80601f0160208091040260200160405190810160405280929190818152602001828054610e5790612646565b8015610ea45780601f10610e7957610100808354040283529160200191610ea4565b820191906000526020600020905b815481529060010190602001808311610e8757829003601f168201915b5050505050905090565b610eb88282611872565b5050565b8060086000610ec9611208565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610f76611208565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610fbb91906123f0565b60405180910390a35050565b6000610fd1611890565b905090565b610fe184848461094e565b60008373ffffffffffffffffffffffffffffffffffffffff163b146110435761100c848484846118a3565b611042576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b6060611054826111a9565b61108a576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611094611a03565b90506000815114156110b557604051806020016040528060008152506110e0565b806110bf84611a1a565b6040516020016110d0929190612365565b6040516020818303038152906040525b915050919050565b60006110f2611a73565b905090565b60005481565b6000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b611199611dd3565b6111a282611a7d565b9050919050565b6000816111b4611210565b111580156111c3575060015482105b8015611201575060007c0100000000000000000000000000000000000000000000000000000000600560008581526020019081526020016000205416145b9050919050565b600033905090565b60008054905090565b60008167ffffffffffffffff16141561125e576040517fccfbd56600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006009600084815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff16141580156112db57506009600083815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff168167ffffffffffffffff1611155b15611312576040517f92fe021400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806009600084815260200190815260200160002060006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505050565b6000808290508061135f611210565b116113e7576001548110156113e65760006005600083815260200190815260200160002054905060007c0100000000000000000000000000000000000000000000000000000000821614156113e4575b60008114156113da5760056000836001900393508381526020019081526020016000205490506113af565b8092505050611419565b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b60008060006007600085815260200190815260200160002090508092508254915050915091565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b60005b818110156115675760006009600083866114a69190612517565b815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff161415801561151d57506009600082856114ec9190612517565b815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff164211155b15611554576040517f750e912300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b808061155f906126a9565b91505061148c565b5050505050565b60008060e883901c905060e8611585868684611aa8565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b600067ffffffffffffffff6080600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054901c169050919050565b600061162983611350565b9050600081905060008061163c8661141e565b9150915084156116a5576116588184611653611208565b611445565b6116a45761166d83611668611208565b6110fd565b6116a3576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b5b6116b3836000886001611489565b80156116be57600082555b600160806001901b03600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550611766836117238560008861156e565b7c02000000000000000000000000000000000000000000000000000000007c01000000000000000000000000000000000000000000000000000000001717611596565b600560008881526020019081526020016000208190555060007c0200000000000000000000000000000000000000000000000000000000851614156117ee5760006001870190506000600560008381526020019081526020016000205414156117ec5760015481146117eb578460056000838152602001908152602001600020819055505b5b505b85600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46118588360008860016115c1565b600260008154809291906001019190505550505050505050565b61188c828260405180602001604052806000815250611ab1565b5050565b600061189a611210565b60015403905090565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a026118c9611208565b8786866040518563ffffffff1660e01b81526004016118eb94939291906123a4565b602060405180830381600087803b15801561190557600080fd5b505af192505050801561193657506040513d601f19601f820116820180604052508101906119339190612167565b60015b6119b0573d8060008114611966576040519150601f19603f3d011682016040523d82523d6000602084013e61196b565b606091505b506000815114156119a8576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052806000815250905090565b606060a060405101806040526020810391506000825281835b600115611a5e57600184039350600a81066030018453600a8104905080611a5957611a5e565b611a33565b50828103602084039350808452505050919050565b6000600254905090565b611a85611dd3565b611aa16005600084815260200190815260200160002054611b4f565b9050919050565b60009392505050565b611abb8383611c05565b60008373ffffffffffffffffffffffffffffffffffffffff163b14611b4a5760006001549050600083820390505b611afc60008683806001019450866118a3565b611b32576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b818110611ae9578160015414611b4757600080fd5b50505b505050565b611b57611dd3565b81816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060a082901c816020019067ffffffffffffffff16908167ffffffffffffffff168152505060007c01000000000000000000000000000000000000000000000000000000008316141581604001901515908115158152505060e882901c816060019062ffffff16908162ffffff1681525050919050565b600060015490506000821415611c47576040517fb562e8dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611c546000848385611489565b600160406001901b178202600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550611ccb83611cbc600086600061156e565b611cc585611dc3565b17611596565b6005600083815260200190815260200160002081905550600080838301905073ffffffffffffffffffffffffffffffffffffffff85169150828260007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600183015b818114611d6c57808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600181019050611d31565b506000821415611da8576040517f2e07630000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806001819055505050611dbe60008483856115c1565b505050565b60006001821460e11b9050919050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff168152602001600015158152602001600062ffffff1681525090565b6000611e35611e30846124a3565b61247e565b905082815260208101848484011115611e4d57600080fd5b611e58848285612604565b509392505050565b600081359050611e6f81612790565b92915050565b600081359050611e84816127a7565b92915050565b600081359050611e99816127be565b92915050565b600081519050611eae816127be565b92915050565b600082601f830112611ec557600080fd5b8135611ed5848260208601611e22565b91505092915050565b600081359050611eed816127d5565b92915050565b600081359050611f02816127ec565b92915050565b600060208284031215611f1a57600080fd5b6000611f2884828501611e60565b91505092915050565b60008060408385031215611f4457600080fd5b6000611f5285828601611e60565b9250506020611f6385828601611e60565b9150509250929050565b600080600060608486031215611f8257600080fd5b6000611f9086828701611e60565b9350506020611fa186828701611e60565b9250506040611fb286828701611ede565b9150509250925092565b60008060008060808587031215611fd257600080fd5b6000611fe087828801611e60565b9450506020611ff187828801611e60565b935050604061200287828801611ede565b925050606085013567ffffffffffffffff81111561201f57600080fd5b61202b87828801611eb4565b91505092959194509250565b600080600080600060a0868803121561204f57600080fd5b600061205d88828901611e60565b955050602061206e88828901611e60565b945050604061207f88828901611ede565b935050606061209088828901611ef3565b925050608086013567ffffffffffffffff8111156120ad57600080fd5b6120b988828901611eb4565b9150509295509295909350565b600080604083850312156120d957600080fd5b60006120e785828601611e60565b92505060206120f885828601611e75565b9150509250929050565b6000806040838503121561211557600080fd5b600061212385828601611e60565b925050602061213485828601611ede565b9150509250929050565b60006020828403121561215057600080fd5b600061215e84828501611e8a565b91505092915050565b60006020828403121561217957600080fd5b600061218784828501611e9f565b91505092915050565b6000602082840312156121a257600080fd5b60006121b084828501611ede565b91505092915050565b600080604083850312156121cc57600080fd5b60006121da85828601611ede565b92505060206121eb85828601611ef3565b9150509250929050565b6121fe8161256d565b82525050565b61220d8161256d565b82525050565b61221c8161257f565b82525050565b61222b8161257f565b82525050565b600061223c826124d4565b61224681856124ea565b9350612256818560208601612613565b61225f8161277f565b840191505092915050565b6000612275826124df565b61227f81856124fb565b935061228f818560208601612613565b6122988161277f565b840191505092915050565b60006122ae826124df565b6122b8818561250c565b93506122c8818560208601612613565b80840191505092915050565b6080820160008201516122ea60008501826121f5565b5060208201516122fd6020850182612347565b5060408201516123106040850182612213565b5060608201516123236060850182612329565b50505050565b612332816125d7565b82525050565b612341816125e6565b82525050565b612350816125f0565b82525050565b61235f816125f0565b82525050565b600061237182856122a3565b915061237d82846122a3565b91508190509392505050565b600060208201905061239e6000830184612204565b92915050565b60006080820190506123b96000830187612204565b6123c66020830186612204565b6123d36040830185612338565b81810360608301526123e58184612231565b905095945050505050565b60006020820190506124056000830184612222565b92915050565b60006020820190508181036000830152612425818461226a565b905092915050565b600060808201905061244260008301846122d4565b92915050565b600060208201905061245d6000830184612338565b92915050565b60006020820190506124786000830184612356565b92915050565b6000612488612499565b90506124948282612678565b919050565b6000604051905090565b600067ffffffffffffffff8211156124be576124bd612750565b5b6124c78261277f565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000612522826125e6565b915061252d836125e6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612562576125616126f2565b5b828201905092915050565b6000612578826125b7565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015612631578082015181840152602081019050612616565b83811115612640576000848401525b50505050565b6000600282049050600182168061265e57607f821691505b6020821081141561267257612671612721565b5b50919050565b6126818261277f565b810181811067ffffffffffffffff821117156126a05761269f612750565b5b80604052505050565b60006126b4826125e6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156126e7576126e66126f2565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6127998161256d565b81146127a457600080fd5b50565b6127b08161257f565b81146127bb57600080fd5b50565b6127c78161258b565b81146127d257600080fd5b50565b6127de816125e6565b81146127e957600080fd5b50565b6127f5816125f0565b811461280057600080fd5b5056fea2646970667358221220503e9e1bf25dc36f53d9da1b717400912a9c02b8bcd9b2fa63c00bfd7b9a7de464736f6c63430008040033";

type ERC721ABurnableStartTokenIdMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721ABurnableStartTokenIdMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721ABurnableStartTokenIdMock__factory extends ContractFactory {
  constructor(...args: ERC721ABurnableStartTokenIdMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    startTokenId_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721ABurnableStartTokenIdMock> {
    return super.deploy(
      name_,
      symbol_,
      startTokenId_,
      overrides || {}
    ) as Promise<ERC721ABurnableStartTokenIdMock>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    startTokenId_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      startTokenId_,
      overrides || {}
    );
  }
  override attach(address: string): ERC721ABurnableStartTokenIdMock {
    return super.attach(address) as ERC721ABurnableStartTokenIdMock;
  }
  override connect(signer: Signer): ERC721ABurnableStartTokenIdMock__factory {
    return super.connect(signer) as ERC721ABurnableStartTokenIdMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721ABurnableStartTokenIdMockInterface {
    return new utils.Interface(
      _abi
    ) as ERC721ABurnableStartTokenIdMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721ABurnableStartTokenIdMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC721ABurnableStartTokenIdMock;
  }
}
