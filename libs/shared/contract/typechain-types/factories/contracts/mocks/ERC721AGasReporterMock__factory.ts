/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC721AGasReporterMock,
  ERC721AGasReporterMockInterface,
} from "../../../contracts/mocks/ERC721AGasReporterMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "LockUntilMustBeUpperThanCurrentValue",
    type: "error",
  },
  {
    inputs: [],
    name: "LockUntilZero",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferLockedToken",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "_lockUntil",
        type: "uint64",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "_lockUntil",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "lockTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lockUntil",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mintOne",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mintTen",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "safeMintOne",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "safeMintTen",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferTenAsc",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferTenAvg",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferTenDesc",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620027d4380380620027d48339818101604052810190620000379190620001b6565b818181600290805190602001906200005192919062000094565b5080600390805190602001906200006a92919062000094565b506200007b6200008b60201b60201c565b6000819055505050505062000399565b60006001905090565b828054620000a290620002be565b90600052602060002090601f016020900481019282620000c6576000855562000112565b82601f10620000e157805160ff191683800117855562000112565b8280016001018555821562000112579182015b8281111562000111578251825591602001919060010190620000f4565b5b50905062000121919062000125565b5090565b5b808211156200014057600081600090555060010162000126565b5090565b60006200015b620001558462000252565b62000229565b9050828152602081018484840111156200017457600080fd5b6200018184828562000288565b509392505050565b600082601f8301126200019b57600080fd5b8151620001ad84826020860162000144565b91505092915050565b60008060408385031215620001ca57600080fd5b600083015167ffffffffffffffff811115620001e557600080fd5b620001f38582860162000189565b925050602083015167ffffffffffffffff8111156200021157600080fd5b6200021f8582860162000189565b9150509250929050565b60006200023562000248565b9050620002438282620002f4565b919050565b6000604051905090565b600067ffffffffffffffff82111562000270576200026f62000359565b5b6200027b8262000388565b9050602081019050919050565b60005b83811015620002a85780820151818401526020810190506200028b565b83811115620002b8576000848401525b50505050565b60006002820490506001821680620002d757607f821691505b60208210811415620002ee57620002ed6200032a565b5b50919050565b620002ff8262000388565b810181811067ffffffffffffffff8211171562000321576200032062000359565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61242b80620003a96000396000f3fe60806040526004361061014b5760003560e01c80636352211e116100b6578063bcd9bbbc1161006f578063bcd9bbbc14610468578063c87b56dd14610491578063db6745f8146104ce578063e985e9c5146104f7578063ef9c0bec14610534578063fa695a971461055d5761014b565b80636352211e1461035557806370a082311461039257806381861f84146103cf57806395d89b41146103f8578063a22cb46514610423578063b88d4fde1461044c5761014b565b806318160ddd1161010857806318160ddd1461027757806320173292146102a257806323b872dd146102cb5780633efa9979146102e757806342842e0e146103105780634da42e581461032c5761014b565b806301ffc9a71461015057806306fdde031461018d578063081812fc146101b8578063095ea7b3146101f55780630ceea305146102115780630ff4ba631461024e575b600080fd5b34801561015c57600080fd5b5061017760048036038101906101729190611deb565b610586565b604051610184919061200c565b60405180910390f35b34801561019957600080fd5b506101a2610618565b6040516101af9190612027565b60405180910390f35b3480156101c457600080fd5b506101df60048036038101906101da9190611e3d565b6106aa565b6040516101ec9190611fa5565b60405180910390f35b61020f600480360381019061020a9190611daf565b610729565b005b34801561021d57600080fd5b5061023860048036038101906102339190611e3d565b61086d565b6040516102459190612064565b60405180910390f35b34801561025a57600080fd5b5061027560048036038101906102709190611bb5565b610894565b005b34801561028357600080fd5b5061028c61090f565b6040516102999190612049565b60405180910390f35b3480156102ae57600080fd5b506102c960048036038101906102c49190611ce4565b610926565b005b6102e560048036038101906102e09190611c1a565b610943565b005b3480156102f357600080fd5b5061030e60048036038101906103099190611e66565b610c68565b005b61032a60048036038101906103259190611c1a565b610cf4565b005b34801561033857600080fd5b50610353600480360381019061034e9190611bb5565b610d14565b005b34801561036157600080fd5b5061037c60048036038101906103779190611e3d565b610d8f565b6040516103899190611fa5565b60405180910390f35b34801561039e57600080fd5b506103b960048036038101906103b49190611bb5565b610da1565b6040516103c69190612049565b60405180910390f35b3480156103db57600080fd5b506103f660048036038101906103f19190611bb5565b610e5a565b005b34801561040457600080fd5b5061040d610e68565b60405161041a9190612027565b60405180910390f35b34801561042f57600080fd5b5061044a60048036038101906104459190611d73565b610efa565b005b61046660048036038101906104619190611c69565b611005565b005b34801561047457600080fd5b5061048f600480360381019061048a9190611bb5565b611078565b005b34801561049d57600080fd5b506104b860048036038101906104b39190611e3d565b6110f3565b6040516104c59190612027565b60405180910390f35b3480156104da57600080fd5b506104f560048036038101906104f09190611bb5565b611192565b005b34801561050357600080fd5b5061051e60048036038101906105199190611bde565b6111a0565b60405161052b919061200c565b60405180910390f35b34801561054057600080fd5b5061055b60048036038101906105569190611bb5565b611234565b005b34801561056957600080fd5b50610584600480360381019061057f9190611bb5565b611242565b005b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806105e157506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806106115750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60606002805461062790612238565b80601f016020809104026020016040519081016040528092919081815260200182805461065390612238565b80156106a05780601f10610675576101008083540402835291602001916106a0565b820191906000526020600020905b81548152906001019060200180831161068357829003601f168201915b5050505050905090565b60006106b582611250565b6106eb576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061073482610d8f565b90508073ffffffffffffffffffffffffffffffffffffffff166107556112af565b73ffffffffffffffffffffffffffffffffffffffff16146107b8576107818161077c6112af565b6111a0565b6107b7576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b826006600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b60086020528060005260406000206000915054906101000a900467ffffffffffffffff1681565b6108a033826000610943565b6108ac33826001610943565b6108b833826002610943565b6108c433826003610943565b6108d033826004610943565b6108dc33826005610943565b6108e833826006610943565b6108f433826007610943565b61090033826008610943565b61090c33826009610943565b50565b60006109196112b7565b6001546000540303905090565b61093285858584611005565b61093c83836112c0565b5050505050565b600061094e826113f7565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146109b5576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806109c1846114c5565b915091506109d781876109d26112af565b6114ec565b610a23576109ec866109e76112af565b6111a0565b610a22576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610a8a576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a978686866001611530565b8015610aa257600082555b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815460010191905081905550610b7085610b4c888887611615565b7c02000000000000000000000000000000000000000000000000000000001761163d565b600460008681526020019081526020016000208190555060007c020000000000000000000000000000000000000000000000000000000084161415610bf8576000600185019050600060046000838152602001908152602001600020541415610bf6576000548114610bf5578360046000838152602001908152602001600020819055505b5b505b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610c608686866001611668565b505050505050565b6000610c7383610d8f565b9050600080610c81856114c5565b91509150610c978184610c926112af565b6114ec565b610ce357610cac83610ca76112af565b6111a0565b610ce2576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b610ced85856112c0565b5050505050565b610d0f83838360405180602001604052806000815250611005565b505050565b610d2033826009610943565b610d2c33826008610943565b610d3833826007610943565b610d4433826006610943565b610d5033826005610943565b610d5c33826004610943565b610d6833826003610943565b610d7433826002610943565b610d8033826001610943565b610d8c33826000610943565b50565b6000610d9a826113f7565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e09576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b610e6581600a61166e565b50565b606060038054610e7790612238565b80601f0160208091040260200160405190810160405280929190818152602001828054610ea390612238565b8015610ef05780601f10610ec557610100808354040283529160200191610ef0565b820191906000526020600020905b815481529060010190602001808311610ed357829003601f168201915b5050505050905090565b8060076000610f076112af565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610fb46112af565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ff9919061200c565b60405180910390a35050565b611010848484610943565b60008373ffffffffffffffffffffffffffffffffffffffff163b146110725761103b8484848461168c565b611071576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b61108433826004610943565b61109033826005610943565b61109c33826003610943565b6110a833826006610943565b6110b433826002610943565b6110c033826007610943565b6110cc33826001610943565b6110d833826008610943565b6110e433826000610943565b6110f033826009610943565b50565b60606110fe82611250565b611134576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061113e6117ec565b905060008151141561115f576040518060200160405280600081525061118a565b8061116984611803565b60405160200161117a929190611f81565b6040516020818303038152906040525b915050919050565b61119d81600161166e565b50565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61123f81600a61185c565b50565b61124d81600161185c565b50565b60008161125b6112b7565b1115801561126a575060005482105b80156112a8575060007c0100000000000000000000000000000000000000000000000000000000600460008581526020019081526020016000205416145b9050919050565b600033905090565b60006001905090565b60008167ffffffffffffffff161415611305576040517fccfbd56600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006008600084815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff161415801561138257506008600083815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff168167ffffffffffffffff1611155b156113b9576040517f92fe021400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806008600084815260200190815260200160002060006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505050565b600080829050806114066112b7565b1161148e5760005481101561148d5760006004600083815260200190815260200160002054905060007c01000000000000000000000000000000000000000000000000000000008216141561148b575b6000811415611481576004600083600190039350838152602001908152602001600020549050611456565b80925050506114c0565b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b60008060006006600085815260200190815260200160002090508092508254915050915091565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b60005b8181101561160e57600060086000838661154d9190612118565b815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff16141580156115c457506008600082856115939190612118565b815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff164211155b156115fb576040517f750e912300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80806116069061229b565b915050611533565b5050505050565b60008060e883901c905060e861162c868684611a19565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b611688828260405180602001604052806000815250611a22565b5050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a026116b26112af565b8786866040518563ffffffff1660e01b81526004016116d49493929190611fc0565b602060405180830381600087803b1580156116ee57600080fd5b505af192505050801561171f57506040513d601f19601f8201168201806040525081019061171c9190611e14565b60015b611799573d806000811461174f576040519150601f19603f3d011682016040523d82523d6000602084013e611754565b606091505b50600081511415611791576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052806000815250905090565b606060a060405101806040526020810391506000825281835b60011561184757600184039350600a81066030018453600a810490508061184257611847565b61181c565b50828103602084039350808452505050919050565b600080549050600082141561189d576040517fb562e8dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6118aa6000848385611530565b600160406001901b178202600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550611921836119126000866000611615565b61191b85611abf565b1761163d565b6004600083815260200190815260200160002081905550600080838301905073ffffffffffffffffffffffffffffffffffffffff85169150828260007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600183015b8181146119c257808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600181019050611987565b5060008214156119fe576040517f2e07630000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000819055505050611a146000848385611668565b505050565b60009392505050565b611a2c838361185c565b60008373ffffffffffffffffffffffffffffffffffffffff163b14611aba57600080549050600083820390505b611a6c600086838060010194508661168c565b611aa2576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b818110611a59578160005414611ab757600080fd5b50505b505050565b60006001821460e11b9050919050565b6000611ae2611add846120a4565b61207f565b905082815260208101848484011115611afa57600080fd5b611b058482856121f6565b509392505050565b600081359050611b1c81612382565b92915050565b600081359050611b3181612399565b92915050565b600081359050611b46816123b0565b92915050565b600081519050611b5b816123b0565b92915050565b600082601f830112611b7257600080fd5b8135611b82848260208601611acf565b91505092915050565b600081359050611b9a816123c7565b92915050565b600081359050611baf816123de565b92915050565b600060208284031215611bc757600080fd5b6000611bd584828501611b0d565b91505092915050565b60008060408385031215611bf157600080fd5b6000611bff85828601611b0d565b9250506020611c1085828601611b0d565b9150509250929050565b600080600060608486031215611c2f57600080fd5b6000611c3d86828701611b0d565b9350506020611c4e86828701611b0d565b9250506040611c5f86828701611b8b565b9150509250925092565b60008060008060808587031215611c7f57600080fd5b6000611c8d87828801611b0d565b9450506020611c9e87828801611b0d565b9350506040611caf87828801611b8b565b925050606085013567ffffffffffffffff811115611ccc57600080fd5b611cd887828801611b61565b91505092959194509250565b600080600080600060a08688031215611cfc57600080fd5b6000611d0a88828901611b0d565b9550506020611d1b88828901611b0d565b9450506040611d2c88828901611b8b565b9350506060611d3d88828901611ba0565b925050608086013567ffffffffffffffff811115611d5a57600080fd5b611d6688828901611b61565b9150509295509295909350565b60008060408385031215611d8657600080fd5b6000611d9485828601611b0d565b9250506020611da585828601611b22565b9150509250929050565b60008060408385031215611dc257600080fd5b6000611dd085828601611b0d565b9250506020611de185828601611b8b565b9150509250929050565b600060208284031215611dfd57600080fd5b6000611e0b84828501611b37565b91505092915050565b600060208284031215611e2657600080fd5b6000611e3484828501611b4c565b91505092915050565b600060208284031215611e4f57600080fd5b6000611e5d84828501611b8b565b91505092915050565b60008060408385031215611e7957600080fd5b6000611e8785828601611b8b565b9250506020611e9885828601611ba0565b9150509250929050565b611eab8161216e565b82525050565b611eba81612180565b82525050565b6000611ecb826120d5565b611ed581856120eb565b9350611ee5818560208601612205565b611eee81612371565b840191505092915050565b6000611f04826120e0565b611f0e81856120fc565b9350611f1e818560208601612205565b611f2781612371565b840191505092915050565b6000611f3d826120e0565b611f47818561210d565b9350611f57818560208601612205565b80840191505092915050565b611f6c816121d8565b82525050565b611f7b816121e2565b82525050565b6000611f8d8285611f32565b9150611f998284611f32565b91508190509392505050565b6000602082019050611fba6000830184611ea2565b92915050565b6000608082019050611fd56000830187611ea2565b611fe26020830186611ea2565b611fef6040830185611f63565b81810360608301526120018184611ec0565b905095945050505050565b60006020820190506120216000830184611eb1565b92915050565b600060208201905081810360008301526120418184611ef9565b905092915050565b600060208201905061205e6000830184611f63565b92915050565b60006020820190506120796000830184611f72565b92915050565b600061208961209a565b9050612095828261226a565b919050565b6000604051905090565b600067ffffffffffffffff8211156120bf576120be612342565b5b6120c882612371565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000612123826121d8565b915061212e836121d8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612163576121626122e4565b5b828201905092915050565b6000612179826121b8565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015612223578082015181840152602081019050612208565b83811115612232576000848401525b50505050565b6000600282049050600182168061225057607f821691505b6020821081141561226457612263612313565b5b50919050565b61227382612371565b810181811067ffffffffffffffff8211171561229257612291612342565b5b80604052505050565b60006122a6826121d8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156122d9576122d86122e4565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61238b8161216e565b811461239657600080fd5b50565b6123a281612180565b81146123ad57600080fd5b50565b6123b98161218c565b81146123c457600080fd5b50565b6123d0816121d8565b81146123db57600080fd5b50565b6123e7816121e2565b81146123f257600080fd5b5056fea2646970667358221220ab6c064cbb59e53b248dbea8b90c6e11a20c5694001a909a2eab5e40d425a0ad64736f6c63430008040033";

type ERC721AGasReporterMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721AGasReporterMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721AGasReporterMock__factory extends ContractFactory {
  constructor(...args: ERC721AGasReporterMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721AGasReporterMock> {
    return super.deploy(
      name_,
      symbol_,
      overrides || {}
    ) as Promise<ERC721AGasReporterMock>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override attach(address: string): ERC721AGasReporterMock {
    return super.attach(address) as ERC721AGasReporterMock;
  }
  override connect(signer: Signer): ERC721AGasReporterMock__factory {
    return super.connect(signer) as ERC721AGasReporterMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721AGasReporterMockInterface {
    return new utils.Interface(_abi) as ERC721AGasReporterMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721AGasReporterMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC721AGasReporterMock;
  }
}
