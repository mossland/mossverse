/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC721AQueryableStartTokenIdMock,
  ERC721AQueryableStartTokenIdMockInterface,
} from "../../../contracts/mocks/ERC721AQueryableStartTokenIdMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "startTokenId_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidQueryRange",
    type: "error",
  },
  {
    inputs: [],
    name: "LockUntilMustBeUpperThanCurrentValue",
    type: "error",
  },
  {
    inputs: [],
    name: "LockUntilZero",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferLockedToken",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "explicitOwnershipOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "startTimestamp",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "burned",
            type: "bool",
          },
          {
            internalType: "uint24",
            name: "extraData",
            type: "uint24",
          },
        ],
        internalType: "struct IERC721A.TokenOwnership",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "explicitOwnershipsOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "startTimestamp",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "burned",
            type: "bool",
          },
          {
            internalType: "uint24",
            name: "extraData",
            type: "uint24",
          },
        ],
        internalType: "struct IERC721A.TokenOwnership[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "_lockUntil",
        type: "uint64",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "_lockUntil",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "lockTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lockUntil",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "tokensOfOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stop",
        type: "uint256",
      },
    ],
    name: "tokensOfOwnerIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620033e1380380620033e18339818101604052810190620000379190620001db565b8282818184806000819055505081600390805190602001906200005c929190620000a2565b50806004908051906020019062000075929190620000a2565b50620000866200009960201b60201c565b60018190555050505050505050620003f7565b60008054905090565b828054620000b09062000302565b90600052602060002090601f016020900481019282620000d4576000855562000120565b82601f10620000ef57805160ff191683800117855562000120565b8280016001018555821562000120579182015b828111156200011f57825182559160200191906001019062000102565b5b5090506200012f919062000133565b5090565b5b808211156200014e57600081600090555060010162000134565b5090565b60006200016962000163846200028c565b62000263565b9050828152602081018484840111156200018257600080fd5b6200018f848285620002cc565b509392505050565b600082601f830112620001a957600080fd5b8151620001bb84826020860162000152565b91505092915050565b600081519050620001d581620003dd565b92915050565b600080600060608486031215620001f157600080fd5b600084015167ffffffffffffffff8111156200020c57600080fd5b6200021a8682870162000197565b935050602084015167ffffffffffffffff8111156200023857600080fd5b620002468682870162000197565b92505060406200025986828701620001c4565b9150509250925092565b60006200026f62000282565b90506200027d828262000338565b919050565b6000604051905090565b600067ffffffffffffffff821115620002aa57620002a96200039d565b5b620002b582620003cc565b9050602081019050919050565b6000819050919050565b60005b83811015620002ec578082015181840152602081019050620002cf565b83811115620002fc576000848401525b50505050565b600060028204905060018216806200031b57607f821691505b602082108114156200033257620003316200036e565b5b50919050565b6200034382620003cc565b810181811067ffffffffffffffff821117156200036557620003646200039d565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b620003e881620002c2565b8114620003f457600080fd5b50565b612fda80620004076000396000f3fe60806040526004361061014b5760003560e01c80636352211e116100b6578063a22cb4651161006f578063a22cb465146104b1578063b88d4fde146104da578063c23dc68f146104f6578063c87b56dd14610533578063e6798baa14610570578063e985e9c51461059b5761014b565b80636352211e1461036957806370a08231146103a65780638462151c146103e357806395d89b411461042057806399a2557a1461044b578063a1448194146104885761014b565b80632017329211610108578063201732921461027957806323b872dd146102a25780633efa9979146102be57806342842e0e146102e757806342966c68146103035780635bbb21771461032c5761014b565b806301ffc9a71461015057806306fdde031461018d578063081812fc146101b8578063095ea7b3146101f55780630ceea3051461021157806318160ddd1461024e575b600080fd5b34801561015c57600080fd5b50610177600480360381019061017291906126d9565b6105d8565b6040516101849190612b1f565b60405180910390f35b34801561019957600080fd5b506101a261066a565b6040516101af9190612b3a565b60405180910390f35b3480156101c457600080fd5b506101df60048036038101906101da919061272b565b6106fc565b6040516101ec9190612a74565b60405180910390f35b61020f600480360381019061020a9190612609565b61077b565b005b34801561021d57600080fd5b506102386004803603810190610233919061272b565b6108bf565b6040516102459190612b92565b60405180910390f35b34801561025a57600080fd5b506102636108e6565b6040516102709190612b77565b60405180910390f35b34801561028557600080fd5b506102a0600480360381019061029b919061253e565b6108fd565b005b6102bc60048036038101906102b79190612474565b61091a565b005b3480156102ca57600080fd5b506102e560048036038101906102e09190612754565b610c3f565b005b61030160048036038101906102fc9190612474565b610ccb565b005b34801561030f57600080fd5b5061032a6004803603810190610325919061272b565b610ceb565b005b34801561033857600080fd5b50610353600480360381019061034e9190612694565b610cf9565b6040516103609190612adb565b60405180910390f35b34801561037557600080fd5b50610390600480360381019061038b919061272b565b610e2e565b60405161039d9190612a74565b60405180910390f35b3480156103b257600080fd5b506103cd60048036038101906103c8919061240f565b610e40565b6040516103da9190612b77565b60405180910390f35b3480156103ef57600080fd5b5061040a6004803603810190610405919061240f565b610ef9565b6040516104179190612afd565b60405180910390f35b34801561042c57600080fd5b5061043561108f565b6040516104429190612b3a565b60405180910390f35b34801561045757600080fd5b50610472600480360381019061046d9190612645565b611121565b60405161047f9190612afd565b60405180910390f35b34801561049457600080fd5b506104af60048036038101906104aa9190612609565b611381565b005b3480156104bd57600080fd5b506104d860048036038101906104d391906125cd565b61138f565b005b6104f460048036038101906104ef91906124c3565b61149a565b005b34801561050257600080fd5b5061051d6004803603810190610518919061272b565b61150d565b60405161052a9190612b5c565b60405180910390f35b34801561053f57600080fd5b5061055a6004803603810190610555919061272b565b611577565b6040516105679190612b3a565b60405180910390f35b34801561057c57600080fd5b50610585611616565b6040516105929190612b77565b60405180910390f35b3480156105a757600080fd5b506105c260048036038101906105bd9190612438565b61161c565b6040516105cf9190612b1f565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061063357506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806106635750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60606003805461067990612de7565b80601f01602080910402602001604051908101604052809291908181526020018280546106a590612de7565b80156106f25780601f106106c7576101008083540402835291602001916106f2565b820191906000526020600020905b8154815290600101906020018083116106d557829003601f168201915b5050505050905090565b6000610707826116b0565b61073d576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6007600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061078682610e2e565b90508073ffffffffffffffffffffffffffffffffffffffff166107a761170f565b73ffffffffffffffffffffffffffffffffffffffff161461080a576107d3816107ce61170f565b61161c565b610809576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b826007600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b60096020528060005260406000206000915054906101000a900467ffffffffffffffff1681565b60006108f0611717565b6002546001540303905090565b6109098585858461149a565b6109138383611720565b5050505050565b600061092582611857565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461098c576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008061099884611925565b915091506109ae81876109a961170f565b61194c565b6109fa576109c3866109be61170f565b61161c565b6109f9576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610a61576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a6e8686866001611990565b8015610a7957600082555b600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815460010191905081905550610b4785610b23888887611a75565b7c020000000000000000000000000000000000000000000000000000000017611a9d565b600560008681526020019081526020016000208190555060007c020000000000000000000000000000000000000000000000000000000084161415610bcf576000600185019050600060056000838152602001908152602001600020541415610bcd576001548114610bcc578360056000838152602001908152602001600020819055505b5b505b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610c378686866001611ac8565b505050505050565b6000610c4a83610e2e565b9050600080610c5885611925565b91509150610c6e8184610c6961170f565b61194c565b610cba57610c8383610c7e61170f565b61161c565b610cb9576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b610cc48585611720565b5050505050565b610ce68383836040518060200160405280600081525061149a565b505050565b610cf6816001611ace565b50565b6060600083839050905060008167ffffffffffffffff811115610d45577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610d7e57816020015b610d6b612290565b815260200190600190039081610d635790505b50905060005b828114610e2257610dd3868683818110610dc7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050602002013561150d565b828281518110610e0c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250806001019050610d84565b50809250505092915050565b6000610e3982611857565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ea8576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b60606000806000610f0985610e40565b905060008167ffffffffffffffff811115610f4d577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610f7b5781602001602082028036833780820191505090505b509050610f86612290565b6000610f90611717565b90505b83861461108157610fa381611d22565b9150816040015115610fb457611076565b600073ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff1614610ff457816000015194505b8773ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614156110755780838780600101985081518110611068577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250505b5b806001019050610f93565b508195505050505050919050565b60606004805461109e90612de7565b80601f01602080910402602001604051908101604052809291908181526020018280546110ca90612de7565b80156111175780601f106110ec57610100808354040283529160200191611117565b820191906000526020600020905b8154815290600101906020018083116110fa57829003601f168201915b5050505050905090565b606081831061115c576040517f32c1995a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080611167611d4d565b9050611171611717565b85101561118357611180611717565b94505b8084111561118f578093505b600061119a87610e40565b9050848610156111bd5760008686039050818110156111b7578091505b506111c2565b600090505b60008167ffffffffffffffff811115611204577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156112325781602001602082028036833780820191505090505b509050600082141561124a578094505050505061137a565b60006112558861150d565b90506000816040015161126a57816000015190505b60008990505b8881141580156112805750848714155b1561136c5761128e81611d22565b925082604001511561129f57611361565b600073ffffffffffffffffffffffffffffffffffffffff16836000015173ffffffffffffffffffffffffffffffffffffffff16146112df57826000015191505b8a73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156113605780848880600101995081518110611353577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250505b5b806001019050611270565b508583528296505050505050505b9392505050565b61138b8282611d57565b5050565b806008600061139c61170f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff1661144961170f565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161148e9190612b1f565b60405180910390a35050565b6114a584848461091a565b60008373ffffffffffffffffffffffffffffffffffffffff163b14611507576114d084848484611d75565b611506576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b611515612290565b61151d612290565b611525611717565b8310806115395750611535611d4d565b8310155b156115475780915050611572565b61155083611d22565b90508060400151156115655780915050611572565b61156e83611ed5565b9150505b919050565b6060611582826116b0565b6115b8576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006115c2611ef5565b90506000815114156115e3576040518060200160405280600081525061160e565b806115ed84611f0c565b6040516020016115fe929190612a50565b6040516020818303038152906040525b915050919050565b60005481565b6000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000816116bb611717565b111580156116ca575060015482105b8015611708575060007c0100000000000000000000000000000000000000000000000000000000600560008581526020019081526020016000205416145b9050919050565b600033905090565b60008054905090565b60008167ffffffffffffffff161415611765576040517fccfbd56600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006009600084815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff16141580156117e257506009600083815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff168167ffffffffffffffff1611155b15611819576040517f92fe021400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806009600084815260200190815260200160002060006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505050565b60008082905080611866611717565b116118ee576001548110156118ed5760006005600083815260200190815260200160002054905060007c0100000000000000000000000000000000000000000000000000000000821614156118eb575b60008114156118e15760056000836001900393508381526020019081526020016000205490506118b6565b8092505050611920565b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b60008060006007600085815260200190815260200160002090508092508254915050915091565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b60005b81811015611a6e5760006009600083866119ad9190612cb8565b815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff1614158015611a2457506009600082856119f39190612cb8565b815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff164211155b15611a5b576040517f750e912300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8080611a6690612e4a565b915050611993565b5050505050565b60008060e883901c905060e8611a8c868684611f65565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b6000611ad983611857565b90506000819050600080611aec86611925565b915091508415611b5557611b088184611b0361170f565b61194c565b611b5457611b1d83611b1861170f565b61161c565b611b53576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b5b611b63836000886001611990565b8015611b6e57600082555b600160806001901b03600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550611c1683611bd385600088611a75565b7c02000000000000000000000000000000000000000000000000000000007c01000000000000000000000000000000000000000000000000000000001717611a9d565b600560008881526020019081526020016000208190555060007c020000000000000000000000000000000000000000000000000000000085161415611c9e576000600187019050600060056000838152602001908152602001600020541415611c9c576001548114611c9b578460056000838152602001908152602001600020819055505b5b505b85600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4611d08836000886001611ac8565b600260008154809291906001019190505550505050505050565b611d2a612290565b611d466005600084815260200190815260200160002054611f6e565b9050919050565b6000600154905090565b611d71828260405180602001604052806000815250612024565b5050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611d9b61170f565b8786866040518563ffffffff1660e01b8152600401611dbd9493929190612a8f565b602060405180830381600087803b158015611dd757600080fd5b505af1925050508015611e0857506040513d601f19601f82011682018060405250810190611e059190612702565b60015b611e82573d8060008114611e38576040519150601f19603f3d011682016040523d82523d6000602084013e611e3d565b606091505b50600081511415611e7a576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b611edd612290565b611eee611ee983611857565b611f6e565b9050919050565b606060405180602001604052806000815250905090565b606060a060405101806040526020810391506000825281835b600115611f5057600184039350600a81066030018453600a8104905080611f4b57611f50565b611f25565b50828103602084039350808452505050919050565b60009392505050565b611f76612290565b81816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060a082901c816020019067ffffffffffffffff16908167ffffffffffffffff168152505060007c01000000000000000000000000000000000000000000000000000000008316141581604001901515908115158152505060e882901c816060019062ffffff16908162ffffff1681525050919050565b61202e83836120c2565b60008373ffffffffffffffffffffffffffffffffffffffff163b146120bd5760006001549050600083820390505b61206f6000868380600101945086611d75565b6120a5576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81811061205c5781600154146120ba57600080fd5b50505b505050565b600060015490506000821415612104576040517fb562e8dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6121116000848385611990565b600160406001901b178202600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550612188836121796000866000611a75565b61218285612280565b17611a9d565b6005600083815260200190815260200160002081905550600080838301905073ffffffffffffffffffffffffffffffffffffffff85169150828260007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600183015b81811461222957808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a46001810190506121ee565b506000821415612265576040517f2e07630000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600181905550505061227b6000848385611ac8565b505050565b60006001821460e11b9050919050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff168152602001600015158152602001600062ffffff1681525090565b60006122f26122ed84612bd2565b612bad565b90508281526020810184848401111561230a57600080fd5b612315848285612da5565b509392505050565b60008135905061232c81612f31565b92915050565b60008083601f84011261234457600080fd5b8235905067ffffffffffffffff81111561235d57600080fd5b60208301915083602082028301111561237557600080fd5b9250929050565b60008135905061238b81612f48565b92915050565b6000813590506123a081612f5f565b92915050565b6000815190506123b581612f5f565b92915050565b600082601f8301126123cc57600080fd5b81356123dc8482602086016122df565b91505092915050565b6000813590506123f481612f76565b92915050565b60008135905061240981612f8d565b92915050565b60006020828403121561242157600080fd5b600061242f8482850161231d565b91505092915050565b6000806040838503121561244b57600080fd5b60006124598582860161231d565b925050602061246a8582860161231d565b9150509250929050565b60008060006060848603121561248957600080fd5b60006124978682870161231d565b93505060206124a88682870161231d565b92505060406124b9868287016123e5565b9150509250925092565b600080600080608085870312156124d957600080fd5b60006124e78782880161231d565b94505060206124f88782880161231d565b9350506040612509878288016123e5565b925050606085013567ffffffffffffffff81111561252657600080fd5b612532878288016123bb565b91505092959194509250565b600080600080600060a0868803121561255657600080fd5b60006125648882890161231d565b95505060206125758882890161231d565b9450506040612586888289016123e5565b9350506060612597888289016123fa565b925050608086013567ffffffffffffffff8111156125b457600080fd5b6125c0888289016123bb565b9150509295509295909350565b600080604083850312156125e057600080fd5b60006125ee8582860161231d565b92505060206125ff8582860161237c565b9150509250929050565b6000806040838503121561261c57600080fd5b600061262a8582860161231d565b925050602061263b858286016123e5565b9150509250929050565b60008060006060848603121561265a57600080fd5b60006126688682870161231d565b9350506020612679868287016123e5565b925050604061268a868287016123e5565b9150509250925092565b600080602083850312156126a757600080fd5b600083013567ffffffffffffffff8111156126c157600080fd5b6126cd85828601612332565b92509250509250929050565b6000602082840312156126eb57600080fd5b60006126f984828501612391565b91505092915050565b60006020828403121561271457600080fd5b6000612722848285016123a6565b91505092915050565b60006020828403121561273d57600080fd5b600061274b848285016123e5565b91505092915050565b6000806040838503121561276757600080fd5b6000612775858286016123e5565b9250506020612786858286016123fa565b9150509250929050565b600061279c838361295b565b60808301905092915050565b60006127b48383612a14565b60208301905092915050565b6127c981612d0e565b82525050565b6127d881612d0e565b82525050565b60006127e982612c23565b6127f38185612c69565b93506127fe83612c03565b8060005b8381101561282f5781516128168882612790565b975061282183612c4f565b925050600181019050612802565b5085935050505092915050565b600061284782612c2e565b6128518185612c7a565b935061285c83612c13565b8060005b8381101561288d57815161287488826127a8565b975061287f83612c5c565b925050600181019050612860565b5085935050505092915050565b6128a381612d20565b82525050565b6128b281612d20565b82525050565b60006128c382612c39565b6128cd8185612c8b565b93506128dd818560208601612db4565b6128e681612f20565b840191505092915050565b60006128fc82612c44565b6129068185612c9c565b9350612916818560208601612db4565b61291f81612f20565b840191505092915050565b600061293582612c44565b61293f8185612cad565b935061294f818560208601612db4565b80840191505092915050565b60808201600082015161297160008501826127c0565b5060208201516129846020850182612a32565b506040820151612997604085018261289a565b5060608201516129aa6060850182612a05565b50505050565b6080820160008201516129c660008501826127c0565b5060208201516129d96020850182612a32565b5060408201516129ec604085018261289a565b5060608201516129ff6060850182612a05565b50505050565b612a0e81612d78565b82525050565b612a1d81612d87565b82525050565b612a2c81612d87565b82525050565b612a3b81612d91565b82525050565b612a4a81612d91565b82525050565b6000612a5c828561292a565b9150612a68828461292a565b91508190509392505050565b6000602082019050612a8960008301846127cf565b92915050565b6000608082019050612aa460008301876127cf565b612ab160208301866127cf565b612abe6040830185612a23565b8181036060830152612ad081846128b8565b905095945050505050565b60006020820190508181036000830152612af581846127de565b905092915050565b60006020820190508181036000830152612b17818461283c565b905092915050565b6000602082019050612b3460008301846128a9565b92915050565b60006020820190508181036000830152612b5481846128f1565b905092915050565b6000608082019050612b7160008301846129b0565b92915050565b6000602082019050612b8c6000830184612a23565b92915050565b6000602082019050612ba76000830184612a41565b92915050565b6000612bb7612bc8565b9050612bc38282612e19565b919050565b6000604051905090565b600067ffffffffffffffff821115612bed57612bec612ef1565b5b612bf682612f20565b9050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000612cc382612d87565b9150612cce83612d87565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612d0357612d02612e93565b5b828201905092915050565b6000612d1982612d58565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015612dd2578082015181840152602081019050612db7565b83811115612de1576000848401525b50505050565b60006002820490506001821680612dff57607f821691505b60208210811415612e1357612e12612ec2565b5b50919050565b612e2282612f20565b810181811067ffffffffffffffff82111715612e4157612e40612ef1565b5b80604052505050565b6000612e5582612d87565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612e8857612e87612e93565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b612f3a81612d0e565b8114612f4557600080fd5b50565b612f5181612d20565b8114612f5c57600080fd5b50565b612f6881612d2c565b8114612f7357600080fd5b50565b612f7f81612d87565b8114612f8a57600080fd5b50565b612f9681612d91565b8114612fa157600080fd5b5056fea26469706673582212207f9f2f641a9da65c32a394c93eb222dfe6f782cc210cae779f23a6707511de9464736f6c63430008040033";

type ERC721AQueryableStartTokenIdMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721AQueryableStartTokenIdMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721AQueryableStartTokenIdMock__factory extends ContractFactory {
  constructor(...args: ERC721AQueryableStartTokenIdMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    startTokenId_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721AQueryableStartTokenIdMock> {
    return super.deploy(
      name_,
      symbol_,
      startTokenId_,
      overrides || {}
    ) as Promise<ERC721AQueryableStartTokenIdMock>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    startTokenId_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      startTokenId_,
      overrides || {}
    );
  }
  override attach(address: string): ERC721AQueryableStartTokenIdMock {
    return super.attach(address) as ERC721AQueryableStartTokenIdMock;
  }
  override connect(signer: Signer): ERC721AQueryableStartTokenIdMock__factory {
    return super.connect(signer) as ERC721AQueryableStartTokenIdMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721AQueryableStartTokenIdMockInterface {
    return new utils.Interface(
      _abi
    ) as ERC721AQueryableStartTokenIdMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721AQueryableStartTokenIdMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC721AQueryableStartTokenIdMock;
  }
}
