/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC721AStartTokenIdMock,
  ERC721AStartTokenIdMockInterface,
} from "../../../contracts/mocks/ERC721AStartTokenIdMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "startTokenId_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "LockUntilMustBeUpperThanCurrentValue",
    type: "error",
  },
  {
    inputs: [],
    name: "LockUntilZero",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferLockedToken",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "approvalCheck",
        type: "bool",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getAux",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getOwnershipAt",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "startTimestamp",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "burned",
            type: "bool",
          },
          {
            internalType: "uint24",
            name: "extraData",
            type: "uint24",
          },
        ],
        internalType: "struct IERC721A.TokenOwnership",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getOwnershipOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "startTimestamp",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "burned",
            type: "bool",
          },
          {
            internalType: "uint24",
            name: "extraData",
            type: "uint24",
          },
        ],
        internalType: "struct IERC721A.TokenOwnership",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "initializeOwnershipAt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "_lockUntil",
        type: "uint64",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "_lockUntil",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "lockTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lockUntil",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "numberMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "aux",
        type: "uint64",
      },
    ],
    name: "setAux",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "toString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalBurned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620031b0380380620031b08339818101604052810190620000379190620001db565b8282818184806000819055505081600390805190602001906200005c929190620000a2565b50806004908051906020019062000075929190620000a2565b50620000866200009960201b60201c565b60018190555050505050505050620003f7565b60008054905090565b828054620000b09062000302565b90600052602060002090601f016020900481019282620000d4576000855562000120565b82601f10620000ef57805160ff191683800117855562000120565b8280016001018555821562000120579182015b828111156200011f57825182559160200191906001019062000102565b5b5090506200012f919062000133565b5090565b5b808211156200014e57600081600090555060010162000134565b5090565b60006200016962000163846200028c565b62000263565b9050828152602081018484840111156200018257600080fd5b6200018f848285620002cc565b509392505050565b600082601f830112620001a957600080fd5b8151620001bb84826020860162000152565b91505092915050565b600081519050620001d581620003dd565b92915050565b600080600060608486031215620001f157600080fd5b600084015167ffffffffffffffff8111156200020c57600080fd5b6200021a8682870162000197565b935050602084015167ffffffffffffffff8111156200023857600080fd5b620002468682870162000197565b92505060406200025986828701620001c4565b9150509250925092565b60006200026f62000282565b90506200027d828262000338565b919050565b6000604051905090565b600067ffffffffffffffff821115620002aa57620002a96200039d565b5b620002b582620003cc565b9050602081019050919050565b6000819050919050565b60005b83811015620002ec578082015181840152602081019050620002cf565b83811115620002fc576000848401525b50505050565b600060028204905060018216806200031b57607f821691505b602082108114156200033257620003316200036e565b5b50919050565b6200034382620003cc565b810181811067ffffffffffffffff821117156200036557620003646200039d565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b620003e881620002c2565b8114620003f457600080fd5b50565b612da980620004076000396000f3fe6080604052600436106102045760003560e01c80636900a3ae11610118578063a2309ff8116100a0578063d89135cd1161006f578063d89135cd14610777578063dc33e681146107a2578063e6798baa146107df578063e985e9c51461080a578063f25236331461084757610204565b8063a2309ff8146106b6578063b88d4fde146106e1578063bf0b175e146106fd578063c87b56dd1461073a57610204565b80638832e6e3116100e75780638832e6e3146105e757806395d89b41146106105780639fac68cb1461063b578063a144819414610664578063a22cb4651461068d57610204565b80636900a3ae146105175780636c0360eb1461055457806370a082311461057f57806375794a3c146105bc57610204565b80633efa99791161019b578063453ab1411161016a578063453ab1411461040e5780634f558e791461043757806352d8a4d11461047457806353b1233d146104b15780636352211e146104da57610204565b80633efa99791461037757806340c10f19146103a057806342842e0e146103c957806342966c68146103e557610204565b80630ceea305116101d75780630ceea305146102ca57806318160ddd14610307578063201732921461033257806323b872dd1461035b57610204565b806301ffc9a71461020957806306fdde0314610246578063081812fc14610271578063095ea7b3146102ae575b600080fd5b34801561021557600080fd5b50610230600480360381019061022b9190612672565b610884565b60405161023d9190612960565b60405180910390f35b34801561025257600080fd5b5061025b610916565b604051610268919061297b565b60405180910390f35b34801561027d57600080fd5b50610298600480360381019061029391906126c4565b6109a8565b6040516102a591906128f9565b60405180910390f35b6102c860048036038101906102c39190612593565b610a27565b005b3480156102d657600080fd5b506102f160048036038101906102ec91906126c4565b610b6b565b6040516102fe91906129d3565b60405180910390f35b34801561031357600080fd5b5061031c610b92565b60405161032991906129b8565b60405180910390f35b34801561033e57600080fd5b50610359600480360381019061035491906124c8565b610ba9565b005b610375600480360381019061037091906123fe565b610bc6565b005b34801561038357600080fd5b5061039e60048036038101906103999190612729565b610eeb565b005b3480156103ac57600080fd5b506103c760048036038101906103c29190612593565b610f77565b005b6103e360048036038101906103de91906123fe565b610f85565b005b3480156103f157600080fd5b5061040c600480360381019061040791906126c4565b610fa5565b005b34801561041a57600080fd5b5061043560048036038101906104309190612636565b610fb1565b005b34801561044357600080fd5b5061045e600480360381019061045991906126c4565b610fbf565b60405161046b9190612960565b60405180910390f35b34801561048057600080fd5b5061049b600480360381019061049691906126c4565b610fd1565b6040516104a8919061299d565b60405180910390f35b3480156104bd57600080fd5b506104d860048036038101906104d391906126c4565b610fe9565b005b3480156104e657600080fd5b5061050160048036038101906104fc91906126c4565b610ff5565b60405161050e91906128f9565b60405180910390f35b34801561052357600080fd5b5061053e600480360381019061053991906126c4565b611007565b60405161054b919061297b565b60405180910390f35b34801561056057600080fd5b50610569611019565b604051610576919061297b565b60405180910390f35b34801561058b57600080fd5b506105a660048036038101906105a19190612399565b611028565b6040516105b391906129b8565b60405180910390f35b3480156105c857600080fd5b506105d16110e1565b6040516105de91906129b8565b60405180910390f35b3480156105f357600080fd5b5061060e600480360381019061060991906125cf565b6110f0565b005b34801561061c57600080fd5b50610625611100565b604051610632919061297b565b60405180910390f35b34801561064757600080fd5b50610662600480360381019061065d91906126ed565b611192565b005b34801561067057600080fd5b5061068b60048036038101906106869190612593565b6111a0565b005b34801561069957600080fd5b506106b460048036038101906106af9190612557565b6111ae565b005b3480156106c257600080fd5b506106cb6112b9565b6040516106d891906129b8565b60405180910390f35b6106fb60048036038101906106f6919061244d565b6112c8565b005b34801561070957600080fd5b50610724600480360381019061071f9190612399565b61133b565b60405161073191906129d3565b60405180910390f35b34801561074657600080fd5b50610761600480360381019061075c91906126c4565b61134d565b60405161076e919061297b565b60405180910390f35b34801561078357600080fd5b5061078c6113ec565b60405161079991906129b8565b60405180910390f35b3480156107ae57600080fd5b506107c960048036038101906107c49190612399565b6113fb565b6040516107d691906129b8565b60405180910390f35b3480156107eb57600080fd5b506107f461140d565b60405161080191906129b8565b60405180910390f35b34801561081657600080fd5b50610831600480360381019061082c91906123c2565b611413565b60405161083e9190612960565b60405180910390f35b34801561085357600080fd5b5061086e600480360381019061086991906126c4565b6114a7565b60405161087b919061299d565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806108df57506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061090f5750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60606003805461092590612bb6565b80601f016020809104026020016040519081016040528092919081815260200182805461095190612bb6565b801561099e5780601f106109735761010080835404028352916020019161099e565b820191906000526020600020905b81548152906001019060200180831161098157829003601f168201915b5050505050905090565b60006109b3826114bf565b6109e9576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6007600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610a3282610ff5565b90508073ffffffffffffffffffffffffffffffffffffffff16610a5361151e565b73ffffffffffffffffffffffffffffffffffffffff1614610ab657610a7f81610a7a61151e565b611413565b610ab5576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b826007600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b60096020528060005260406000206000915054906101000a900467ffffffffffffffff1681565b6000610b9c611526565b6002546001540303905090565b610bb5858585846112c8565b610bbf838361152f565b5050505050565b6000610bd182611666565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c38576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080610c4484611734565b91509150610c5a8187610c5561151e565b61175b565b610ca657610c6f86610c6a61151e565b611413565b610ca5576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610d0d576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d1a868686600161179f565b8015610d2557600082555b600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815460010191905081905550610df385610dcf888887611884565b7c0200000000000000000000000000000000000000000000000000000000176118ac565b600560008681526020019081526020016000208190555060007c020000000000000000000000000000000000000000000000000000000084161415610e7b576000600185019050600060056000838152602001908152602001600020541415610e79576001548114610e78578360056000838152602001908152602001600020819055505b5b505b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610ee386868660016118d7565b505050505050565b6000610ef683610ff5565b9050600080610f0485611734565b91509150610f1a8184610f1561151e565b61175b565b610f6657610f2f83610f2a61151e565b611413565b610f65576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b610f70858561152f565b5050505050565b610f8182826118dd565b5050565b610fa0838383604051806020016040528060008152506112c8565b505050565b610fae81611a9b565b50565b610fbb8282611aa9565b5050565b6000610fca826114bf565b9050919050565b610fd9612264565b610fe282611b5f565b9050919050565b610ff281611b7f565b50565b600061100082611666565b9050919050565b606061101282611bbf565b9050919050565b6060611023611c18565b905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611090576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b60006110eb611c2f565b905090565b6110fb838383611c39565b505050565b60606004805461110f90612bb6565b80601f016020809104026020016040519081016040528092919081815260200182805461113b90612bb6565b80156111885780601f1061115d57610100808354040283529160200191611188565b820191906000526020600020905b81548152906001019060200180831161116b57829003601f168201915b5050505050905090565b61119c8282611cd7565b5050565b6111aa8282611f2b565b5050565b80600860006111bb61151e565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff1661126861151e565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516112ad9190612960565b60405180910390a35050565b60006112c3611f49565b905090565b6112d3848484610bc6565b60008373ffffffffffffffffffffffffffffffffffffffff163b14611335576112fe84848484611f5c565b611334576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b6000611346826120bc565b9050919050565b6060611358826114bf565b61138e576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611398611c18565b90506000815114156113b957604051806020016040528060008152506113e4565b806113c384611bbf565b6040516020016113d49291906128d5565b6040516020818303038152906040525b915050919050565b60006113f6612109565b905090565b600061140682612113565b9050919050565b60005481565b6000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6114af612264565b6114b88261216a565b9050919050565b6000816114ca611526565b111580156114d9575060015482105b8015611517575060007c0100000000000000000000000000000000000000000000000000000000600560008581526020019081526020016000205416145b9050919050565b600033905090565b60008054905090565b60008167ffffffffffffffff161415611574576040517fccfbd56600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006009600084815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff16141580156115f157506009600083815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff168167ffffffffffffffff1611155b15611628576040517f92fe021400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806009600084815260200190815260200160002060006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505050565b60008082905080611675611526565b116116fd576001548110156116fc5760006005600083815260200190815260200160002054905060007c0100000000000000000000000000000000000000000000000000000000821614156116fa575b60008114156116f05760056000836001900393508381526020019081526020016000205490506116c5565b809250505061172f565b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b60008060006007600085815260200190815260200160002090508092508254915050915091565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b60005b8181101561187d5760006009600083866117bc9190612a87565b815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff161415801561183357506009600082856118029190612a87565b815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff164211155b1561186a576040517f750e912300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b808061187590612c19565b9150506117a2565b5050505050565b60008060e883901c905060e861189b868684612195565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b60006001549050600082141561191f576040517fb562e8dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61192c600084838561179f565b600160406001901b178202600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506119a3836119946000866000611884565b61199d8561219e565b176118ac565b6005600083815260200190815260200160002081905550600080838301905073ffffffffffffffffffffffffffffffffffffffff85169150828260007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600183015b818114611a4457808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600181019050611a09565b506000821415611a80576040517f2e07630000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806001819055505050611a9660008483856118d7565b505050565b611aa6816000611cd7565b50565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600082905060c081901b77ffffffffffffffffffffffffffffffffffffffffffffffff831617915081600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050565b611b67612264565b611b78611b7383611666565b6121ae565b9050919050565b600060056000838152602001908152602001600020541415611bbc57611ba481611666565b60056000838152602001908152602001600020819055505b50565b606060a060405101806040526020810391506000825281835b600115611c0357600184039350600a81066030018453600a8104905080611bfe57611c03565b611bd8565b50828103602084039350808452505050919050565b606060405180602001604052806000815250905090565b6000600154905090565b611c4383836118dd565b60008373ffffffffffffffffffffffffffffffffffffffff163b14611cd25760006001549050600083820390505b611c846000868380600101945086611f5c565b611cba576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b818110611c71578160015414611ccf57600080fd5b50505b505050565b6000611ce283611666565b90506000819050600080611cf586611734565b915091508415611d5e57611d118184611d0c61151e565b61175b565b611d5d57611d2683611d2161151e565b611413565b611d5c576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b5b611d6c83600088600161179f565b8015611d7757600082555b600160806001901b03600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550611e1f83611ddc85600088611884565b7c02000000000000000000000000000000000000000000000000000000007c010000000000000000000000000000000000000000000000000000000017176118ac565b600560008881526020019081526020016000208190555060007c020000000000000000000000000000000000000000000000000000000085161415611ea7576000600187019050600060056000838152602001908152602001600020541415611ea5576001548114611ea4578460056000838152602001908152602001600020819055505b5b505b85600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4611f118360008860016118d7565b600260008154809291906001019190505550505050505050565b611f45828260405180602001604052806000815250611c39565b5050565b6000611f53611526565b60015403905090565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611f8261151e565b8786866040518563ffffffff1660e01b8152600401611fa49493929190612914565b602060405180830381600087803b158015611fbe57600080fd5b505af1925050508015611fef57506040513d601f19601f82011682018060405250810190611fec919061269b565b60015b612069573d806000811461201f576040519150601f19603f3d011682016040523d82523d6000602084013e612024565b606091505b50600081511415612061576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b600060c0600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054901c9050919050565b6000600254905090565b600067ffffffffffffffff6040600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054901c169050919050565b612172612264565b61218e60056000848152602001908152602001600020546121ae565b9050919050565b60009392505050565b60006001821460e11b9050919050565b6121b6612264565b81816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060a082901c816020019067ffffffffffffffff16908167ffffffffffffffff168152505060007c01000000000000000000000000000000000000000000000000000000008316141581604001901515908115158152505060e882901c816060019062ffffff16908162ffffff1681525050919050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff168152602001600015158152602001600062ffffff1681525090565b60006122c66122c184612a13565b6129ee565b9050828152602081018484840111156122de57600080fd5b6122e9848285612b74565b509392505050565b60008135905061230081612d00565b92915050565b60008135905061231581612d17565b92915050565b60008135905061232a81612d2e565b92915050565b60008151905061233f81612d2e565b92915050565b600082601f83011261235657600080fd5b81356123668482602086016122b3565b91505092915050565b60008135905061237e81612d45565b92915050565b60008135905061239381612d5c565b92915050565b6000602082840312156123ab57600080fd5b60006123b9848285016122f1565b91505092915050565b600080604083850312156123d557600080fd5b60006123e3858286016122f1565b92505060206123f4858286016122f1565b9150509250929050565b60008060006060848603121561241357600080fd5b6000612421868287016122f1565b9350506020612432868287016122f1565b92505060406124438682870161236f565b9150509250925092565b6000806000806080858703121561246357600080fd5b6000612471878288016122f1565b9450506020612482878288016122f1565b93505060406124938782880161236f565b925050606085013567ffffffffffffffff8111156124b057600080fd5b6124bc87828801612345565b91505092959194509250565b600080600080600060a086880312156124e057600080fd5b60006124ee888289016122f1565b95505060206124ff888289016122f1565b94505060406125108882890161236f565b935050606061252188828901612384565b925050608086013567ffffffffffffffff81111561253e57600080fd5b61254a88828901612345565b9150509295509295909350565b6000806040838503121561256a57600080fd5b6000612578858286016122f1565b925050602061258985828601612306565b9150509250929050565b600080604083850312156125a657600080fd5b60006125b4858286016122f1565b92505060206125c58582860161236f565b9150509250929050565b6000806000606084860312156125e457600080fd5b60006125f2868287016122f1565b93505060206126038682870161236f565b925050604084013567ffffffffffffffff81111561262057600080fd5b61262c86828701612345565b9150509250925092565b6000806040838503121561264957600080fd5b6000612657858286016122f1565b925050602061266885828601612384565b9150509250929050565b60006020828403121561268457600080fd5b60006126928482850161231b565b91505092915050565b6000602082840312156126ad57600080fd5b60006126bb84828501612330565b91505092915050565b6000602082840312156126d657600080fd5b60006126e48482850161236f565b91505092915050565b6000806040838503121561270057600080fd5b600061270e8582860161236f565b925050602061271f85828601612306565b9150509250929050565b6000806040838503121561273c57600080fd5b600061274a8582860161236f565b925050602061275b85828601612384565b9150509250929050565b61276e81612add565b82525050565b61277d81612add565b82525050565b61278c81612aef565b82525050565b61279b81612aef565b82525050565b60006127ac82612a44565b6127b68185612a5a565b93506127c6818560208601612b83565b6127cf81612cef565b840191505092915050565b60006127e582612a4f565b6127ef8185612a6b565b93506127ff818560208601612b83565b61280881612cef565b840191505092915050565b600061281e82612a4f565b6128288185612a7c565b9350612838818560208601612b83565b80840191505092915050565b60808201600082015161285a6000850182612765565b50602082015161286d60208501826128b7565b5060408201516128806040850182612783565b5060608201516128936060850182612899565b50505050565b6128a281612b47565b82525050565b6128b181612b56565b82525050565b6128c081612b60565b82525050565b6128cf81612b60565b82525050565b60006128e18285612813565b91506128ed8284612813565b91508190509392505050565b600060208201905061290e6000830184612774565b92915050565b60006080820190506129296000830187612774565b6129366020830186612774565b61294360408301856128a8565b818103606083015261295581846127a1565b905095945050505050565b60006020820190506129756000830184612792565b92915050565b6000602082019050818103600083015261299581846127da565b905092915050565b60006080820190506129b26000830184612844565b92915050565b60006020820190506129cd60008301846128a8565b92915050565b60006020820190506129e860008301846128c6565b92915050565b60006129f8612a09565b9050612a048282612be8565b919050565b6000604051905090565b600067ffffffffffffffff821115612a2e57612a2d612cc0565b5b612a3782612cef565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000612a9282612b56565b9150612a9d83612b56565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612ad257612ad1612c62565b5b828201905092915050565b6000612ae882612b27565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015612ba1578082015181840152602081019050612b86565b83811115612bb0576000848401525b50505050565b60006002820490506001821680612bce57607f821691505b60208210811415612be257612be1612c91565b5b50919050565b612bf182612cef565b810181811067ffffffffffffffff82111715612c1057612c0f612cc0565b5b80604052505050565b6000612c2482612b56565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612c5757612c56612c62565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b612d0981612add565b8114612d1457600080fd5b50565b612d2081612aef565b8114612d2b57600080fd5b50565b612d3781612afb565b8114612d4257600080fd5b50565b612d4e81612b56565b8114612d5957600080fd5b50565b612d6581612b60565b8114612d7057600080fd5b5056fea26469706673582212202065a48045f10016cc13f1ed80fe46f17a8f3a4922da455b6c6754401e0d218f64736f6c63430008040033";

type ERC721AStartTokenIdMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721AStartTokenIdMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721AStartTokenIdMock__factory extends ContractFactory {
  constructor(...args: ERC721AStartTokenIdMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    startTokenId_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721AStartTokenIdMock> {
    return super.deploy(
      name_,
      symbol_,
      startTokenId_,
      overrides || {}
    ) as Promise<ERC721AStartTokenIdMock>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    startTokenId_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      startTokenId_,
      overrides || {}
    );
  }
  override attach(address: string): ERC721AStartTokenIdMock {
    return super.attach(address) as ERC721AStartTokenIdMock;
  }
  override connect(signer: Signer): ERC721AStartTokenIdMock__factory {
    return super.connect(signer) as ERC721AStartTokenIdMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721AStartTokenIdMockInterface {
    return new utils.Interface(_abi) as ERC721AStartTokenIdMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721AStartTokenIdMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC721AStartTokenIdMock;
  }
}
