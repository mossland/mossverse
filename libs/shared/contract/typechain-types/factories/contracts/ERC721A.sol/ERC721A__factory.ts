/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC721A,
  ERC721AInterface,
} from "../../../contracts/ERC721A.sol/ERC721A";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "LockUntilMustBeUpperThanCurrentValue",
    type: "error",
  },
  {
    inputs: [],
    name: "LockUntilZero",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferLockedToken",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "_lockUntil",
        type: "uint64",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "_lockUntil",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "lockTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lockUntil",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002233380380620022338339818101604052810190620000379190620001b2565b81600290805190602001906200004f92919062000090565b5080600390805190602001906200006892919062000090565b50620000796200008760201b60201c565b600081905550505062000395565b60006001905090565b8280546200009e90620002ba565b90600052602060002090601f016020900481019282620000c257600085556200010e565b82601f10620000dd57805160ff19168380011785556200010e565b828001600101855582156200010e579182015b828111156200010d578251825591602001919060010190620000f0565b5b5090506200011d919062000121565b5090565b5b808211156200013c57600081600090555060010162000122565b5090565b60006200015762000151846200024e565b62000225565b9050828152602081018484840111156200017057600080fd5b6200017d84828562000284565b509392505050565b600082601f8301126200019757600080fd5b8151620001a984826020860162000140565b91505092915050565b60008060408385031215620001c657600080fd5b600083015167ffffffffffffffff811115620001e157600080fd5b620001ef8582860162000185565b925050602083015167ffffffffffffffff8111156200020d57600080fd5b6200021b8582860162000185565b9150509250929050565b60006200023162000244565b90506200023f8282620002f0565b919050565b6000604051905090565b600067ffffffffffffffff8211156200026c576200026b62000355565b5b620002778262000384565b9050602081019050919050565b60005b83811015620002a457808201518184015260208101905062000287565b83811115620002b4576000848401525b50505050565b60006002820490506001821680620002d357607f821691505b60208210811415620002ea57620002e962000326565b5b50919050565b620002fb8262000384565b810181811067ffffffffffffffff821117156200031d576200031c62000355565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b611e8e80620003a56000396000f3fe6080604052600436106100fe5760003560e01c80633efa99791161009557806395d89b411161006457806395d89b4114610330578063a22cb4651461035b578063b88d4fde14610384578063c87b56dd146103a0578063e985e9c5146103dd576100fe565b80633efa99791461027157806342842e0e1461029a5780636352211e146102b657806370a08231146102f3576100fe565b80630ceea305116100d15780630ceea305146101c457806318160ddd14610201578063201732921461022c57806323b872dd14610255576100fe565b806301ffc9a71461010357806306fdde0314610140578063081812fc1461016b578063095ea7b3146101a8575b600080fd5b34801561010f57600080fd5b5061012a6004803603810190610125919061184e565b61041a565b6040516101379190611a6f565b60405180910390f35b34801561014c57600080fd5b506101556104ac565b6040516101629190611a8a565b60405180910390f35b34801561017757600080fd5b50610192600480360381019061018d91906118a0565b61053e565b60405161019f9190611a08565b60405180910390f35b6101c260048036038101906101bd9190611812565b6105bd565b005b3480156101d057600080fd5b506101eb60048036038101906101e691906118a0565b610701565b6040516101f89190611ac7565b60405180910390f35b34801561020d57600080fd5b50610216610728565b6040516102239190611aac565b60405180910390f35b34801561023857600080fd5b50610253600480360381019061024e9190611747565b61073f565b005b61026f600480360381019061026a919061167d565b61075c565b005b34801561027d57600080fd5b50610298600480360381019061029391906118c9565b610a81565b005b6102b460048036038101906102af919061167d565b610b0d565b005b3480156102c257600080fd5b506102dd60048036038101906102d891906118a0565b610b2d565b6040516102ea9190611a08565b60405180910390f35b3480156102ff57600080fd5b5061031a60048036038101906103159190611618565b610b3f565b6040516103279190611aac565b60405180910390f35b34801561033c57600080fd5b50610345610bf8565b6040516103529190611a8a565b60405180910390f35b34801561036757600080fd5b50610382600480360381019061037d91906117d6565b610c8a565b005b61039e600480360381019061039991906116cc565b610d95565b005b3480156103ac57600080fd5b506103c760048036038101906103c291906118a0565b610e08565b6040516103d49190611a8a565b60405180910390f35b3480156103e957600080fd5b5061040460048036038101906103ff9190611641565b610ea7565b6040516104119190611a6f565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061047557506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104a55750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6060600280546104bb90611c9b565b80601f01602080910402602001604051908101604052809291908181526020018280546104e790611c9b565b80156105345780601f1061050957610100808354040283529160200191610534565b820191906000526020600020905b81548152906001019060200180831161051757829003601f168201915b5050505050905090565b600061054982610f3b565b61057f576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006105c882610b2d565b90508073ffffffffffffffffffffffffffffffffffffffff166105e9610f9a565b73ffffffffffffffffffffffffffffffffffffffff161461064c5761061581610610610f9a565b610ea7565b61064b576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b826006600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b60086020528060005260406000206000915054906101000a900467ffffffffffffffff1681565b6000610732610fa2565b6001546000540303905090565b61074b85858584610d95565b6107558383610fab565b5050505050565b6000610767826110e2565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146107ce576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806107da846111b0565b915091506107f081876107eb610f9a565b6111d7565b61083c5761080586610800610f9a565b610ea7565b61083b576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614156108a3576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108b0868686600161121b565b80156108bb57600082555b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001019190508190555061098985610965888887611300565b7c020000000000000000000000000000000000000000000000000000000017611328565b600460008681526020019081526020016000208190555060007c020000000000000000000000000000000000000000000000000000000084161415610a11576000600185019050600060046000838152602001908152602001600020541415610a0f576000548114610a0e578360046000838152602001908152602001600020819055505b5b505b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610a798686866001611353565b505050505050565b6000610a8c83610b2d565b9050600080610a9a856111b0565b91509150610ab08184610aab610f9a565b6111d7565b610afc57610ac583610ac0610f9a565b610ea7565b610afb576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b610b068585610fab565b5050505050565b610b2883838360405180602001604052806000815250610d95565b505050565b6000610b38826110e2565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ba7576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b606060038054610c0790611c9b565b80601f0160208091040260200160405190810160405280929190818152602001828054610c3390611c9b565b8015610c805780601f10610c5557610100808354040283529160200191610c80565b820191906000526020600020905b815481529060010190602001808311610c6357829003601f168201915b5050505050905090565b8060076000610c97610f9a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610d44610f9a565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610d899190611a6f565b60405180910390a35050565b610da084848461075c565b60008373ffffffffffffffffffffffffffffffffffffffff163b14610e0257610dcb84848484611359565b610e01576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b6060610e1382610f3b565b610e49576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610e536114b9565b9050600081511415610e745760405180602001604052806000815250610e9f565b80610e7e846114d0565b604051602001610e8f9291906119e4565b6040516020818303038152906040525b915050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600081610f46610fa2565b11158015610f55575060005482105b8015610f93575060007c0100000000000000000000000000000000000000000000000000000000600460008581526020019081526020016000205416145b9050919050565b600033905090565b60006001905090565b60008167ffffffffffffffff161415610ff0576040517fccfbd56600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006008600084815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff161415801561106d57506008600083815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff168167ffffffffffffffff1611155b156110a4576040517f92fe021400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806008600084815260200190815260200160002060006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505050565b600080829050806110f1610fa2565b11611179576000548110156111785760006004600083815260200190815260200160002054905060007c010000000000000000000000000000000000000000000000000000000082161415611176575b600081141561116c576004600083600190039350838152602001908152602001600020549050611141565b80925050506111ab565b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b60008060006006600085815260200190815260200160002090508092508254915050915091565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b60005b818110156112f95760006008600083866112389190611b7b565b815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff16141580156112af575060086000828561127e9190611b7b565b815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff164211155b156112e6576040517f750e912300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80806112f190611cfe565b91505061121e565b5050505050565b60008060e883901c905060e8611317868684611529565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a0261137f610f9a565b8786866040518563ffffffff1660e01b81526004016113a19493929190611a23565b602060405180830381600087803b1580156113bb57600080fd5b505af19250505080156113ec57506040513d601f19601f820116820180604052508101906113e99190611877565b60015b611466573d806000811461141c576040519150601f19603f3d011682016040523d82523d6000602084013e611421565b606091505b5060008151141561145e576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052806000815250905090565b606060a060405101806040526020810391506000825281835b60011561151457600184039350600a81066030018453600a810490508061150f57611514565b6114e9565b50828103602084039350808452505050919050565b60009392505050565b600061154561154084611b07565b611ae2565b90508281526020810184848401111561155d57600080fd5b611568848285611c59565b509392505050565b60008135905061157f81611de5565b92915050565b60008135905061159481611dfc565b92915050565b6000813590506115a981611e13565b92915050565b6000815190506115be81611e13565b92915050565b600082601f8301126115d557600080fd5b81356115e5848260208601611532565b91505092915050565b6000813590506115fd81611e2a565b92915050565b60008135905061161281611e41565b92915050565b60006020828403121561162a57600080fd5b600061163884828501611570565b91505092915050565b6000806040838503121561165457600080fd5b600061166285828601611570565b925050602061167385828601611570565b9150509250929050565b60008060006060848603121561169257600080fd5b60006116a086828701611570565b93505060206116b186828701611570565b92505060406116c2868287016115ee565b9150509250925092565b600080600080608085870312156116e257600080fd5b60006116f087828801611570565b945050602061170187828801611570565b9350506040611712878288016115ee565b925050606085013567ffffffffffffffff81111561172f57600080fd5b61173b878288016115c4565b91505092959194509250565b600080600080600060a0868803121561175f57600080fd5b600061176d88828901611570565b955050602061177e88828901611570565b945050604061178f888289016115ee565b93505060606117a088828901611603565b925050608086013567ffffffffffffffff8111156117bd57600080fd5b6117c9888289016115c4565b9150509295509295909350565b600080604083850312156117e957600080fd5b60006117f785828601611570565b925050602061180885828601611585565b9150509250929050565b6000806040838503121561182557600080fd5b600061183385828601611570565b9250506020611844858286016115ee565b9150509250929050565b60006020828403121561186057600080fd5b600061186e8482850161159a565b91505092915050565b60006020828403121561188957600080fd5b6000611897848285016115af565b91505092915050565b6000602082840312156118b257600080fd5b60006118c0848285016115ee565b91505092915050565b600080604083850312156118dc57600080fd5b60006118ea858286016115ee565b92505060206118fb85828601611603565b9150509250929050565b61190e81611bd1565b82525050565b61191d81611be3565b82525050565b600061192e82611b38565b6119388185611b4e565b9350611948818560208601611c68565b61195181611dd4565b840191505092915050565b600061196782611b43565b6119718185611b5f565b9350611981818560208601611c68565b61198a81611dd4565b840191505092915050565b60006119a082611b43565b6119aa8185611b70565b93506119ba818560208601611c68565b80840191505092915050565b6119cf81611c3b565b82525050565b6119de81611c45565b82525050565b60006119f08285611995565b91506119fc8284611995565b91508190509392505050565b6000602082019050611a1d6000830184611905565b92915050565b6000608082019050611a386000830187611905565b611a456020830186611905565b611a5260408301856119c6565b8181036060830152611a648184611923565b905095945050505050565b6000602082019050611a846000830184611914565b92915050565b60006020820190508181036000830152611aa4818461195c565b905092915050565b6000602082019050611ac160008301846119c6565b92915050565b6000602082019050611adc60008301846119d5565b92915050565b6000611aec611afd565b9050611af88282611ccd565b919050565b6000604051905090565b600067ffffffffffffffff821115611b2257611b21611da5565b5b611b2b82611dd4565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000611b8682611c3b565b9150611b9183611c3b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611bc657611bc5611d47565b5b828201905092915050565b6000611bdc82611c1b565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015611c86578082015181840152602081019050611c6b565b83811115611c95576000848401525b50505050565b60006002820490506001821680611cb357607f821691505b60208210811415611cc757611cc6611d76565b5b50919050565b611cd682611dd4565b810181811067ffffffffffffffff82111715611cf557611cf4611da5565b5b80604052505050565b6000611d0982611c3b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611d3c57611d3b611d47565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b611dee81611bd1565b8114611df957600080fd5b50565b611e0581611be3565b8114611e1057600080fd5b50565b611e1c81611bef565b8114611e2757600080fd5b50565b611e3381611c3b565b8114611e3e57600080fd5b50565b611e4a81611c45565b8114611e5557600080fd5b5056fea2646970667358221220c79ee5c7442c066c2c64867ba3c7dab0eecd7958dbf969a6b7c3fc3f46fd8f7364736f6c63430008040033";

type ERC721AConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721AConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721A__factory extends ContractFactory {
  constructor(...args: ERC721AConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721A> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<ERC721A>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override attach(address: string): ERC721A {
    return super.attach(address) as ERC721A;
  }
  override connect(signer: Signer): ERC721A__factory {
    return super.connect(signer) as ERC721A__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721AInterface {
    return new utils.Interface(_abi) as ERC721AInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721A {
    return new Contract(address, _abi, signerOrProvider) as ERC721A;
  }
}
