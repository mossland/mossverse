/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC1155,
  ERC1155Interface,
} from "../../../contracts/VaultFactory.sol/ERC1155";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "uri_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200255a3803806200255a83398181016040528101906200003791906200018d565b62000048816200004f60201b60201c565b5062000342565b8060029080519060200190620000679291906200006b565b5050565b828054620000799062000267565b90600052602060002090601f0160209004810192826200009d5760008555620000e9565b82601f10620000b857805160ff1916838001178555620000e9565b82800160010185558215620000e9579182015b82811115620000e8578251825591602001919060010190620000cb565b5b509050620000f89190620000fc565b5090565b5b8082111562000117576000816000905550600101620000fd565b5090565b6000620001326200012c84620001fb565b620001d2565b9050828152602081018484840111156200014b57600080fd5b6200015884828562000231565b509392505050565b600082601f8301126200017257600080fd5b8151620001848482602086016200011b565b91505092915050565b600060208284031215620001a057600080fd5b600082015167ffffffffffffffff811115620001bb57600080fd5b620001c98482850162000160565b91505092915050565b6000620001de620001f1565b9050620001ec82826200029d565b919050565b6000604051905090565b600067ffffffffffffffff82111562000219576200021862000302565b5b620002248262000331565b9050602081019050919050565b60005b838110156200025157808201518184015260208101905062000234565b8381111562000261576000848401525b50505050565b600060028204905060018216806200028057607f821691505b60208210811415620002975762000296620002d3565b5b50919050565b620002a88262000331565b810181811067ffffffffffffffff82111715620002ca57620002c962000302565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61220880620003526000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f414610138578063a22cb46514610168578063e985e9c514610184578063f242432a146101b457610087565b8062fdd58e1461008c57806301ffc9a7146100bc5780630e89341c146100ec5780632eb2c2d61461011c575b600080fd5b6100a660048036038101906100a191906117ef565b6101d0565b6040516100b39190611c57565b60405180910390f35b6100d660048036038101906100d19190611897565b610299565b6040516100e39190611bba565b60405180910390f35b610106600480360381019061010191906118e9565b61037b565b6040516101139190611bd5565b60405180910390f35b61013660048036038101906101319190611665565b61040f565b005b610152600480360381019061014d919061182b565b6104b0565b60405161015f9190611b61565b60405180910390f35b610182600480360381019061017d91906117b3565b610661565b005b61019e60048036038101906101999190611629565b610677565b6040516101ab9190611bba565b60405180910390f35b6101ce60048036038101906101c99190611724565b61070b565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610241576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023890611c37565b60405180910390fd5b60008083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061036457507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103745750610373826107ac565b5b9050919050565b60606002805461038a90611ec6565b80601f01602080910402602001604051908101604052809291908181526020018280546103b690611ec6565b80156104035780601f106103d857610100808354040283529160200191610403565b820191906000526020600020905b8154815290600101906020018083116103e657829003601f168201915b50505050509050919050565b610417610816565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16148061045d575061045c85610457610816565b610677565b5b61049c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049390611c37565b60405180910390fd5b6104a9858585858561081e565b5050505050565b606081518351146104f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ed90611c37565b60405180910390fd5b6000835167ffffffffffffffff811115610539577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156105675781602001602082028036833780820191505090505b50905060005b8451811015610656576106008582815181106105b2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101518583815181106105f3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516101d0565b828281518110610639577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250508061064f90611f29565b905061056d565b508091505092915050565b61067361066c610816565b8383610b7e565b5050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610713610816565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161480610759575061075885610753610816565b610677565b5b610798576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078f90611c37565b60405180910390fd5b6107a58585858585610ceb565b5050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b8151835114610862576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085990611c37565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156108d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c990611c37565b60405180910390fd5b60006108dc610816565b90506108ec818787878787610f6d565b60005b8451811015610ae9576000858281518110610933577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015190506000858381518110610978577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519050600080600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1090611c37565b60405180910390fd5b81810360008085815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ace9190611dba565b9250508190555050505080610ae290611f29565b90506108ef565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610b60929190611b83565b60405180910390a4610b76818787878787610f75565b505050505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610bed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be490611c37565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610cde9190611bba565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610d5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5290611c37565b60405180910390fd5b6000610d65610816565b9050610d85818787610d768861115c565b610d7f8861115c565b87610f6d565b600080600086815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905083811015610e1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1390611c37565b60405180910390fd5b83810360008087815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508360008087815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ed19190611dba565b925050819055508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628888604051610f4e929190611c72565b60405180910390a4610f64828888888888611222565b50505050505050565b505050505050565b610f948473ffffffffffffffffffffffffffffffffffffffff16611409565b15611154578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401610fda959493929190611a9f565b602060405180830381600087803b158015610ff457600080fd5b505af192505050801561102557506040513d601f19601f8201168201806040525081019061102291906118c0565b60015b6110cb57611031611fff565b806308c379a0141561108e57506110466120e0565b806110515750611090565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110859190611bd5565b60405180910390fd5b505b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110c290611bf7565b60405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611152576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114990611c17565b60405180910390fd5b505b505050505050565b60606000600167ffffffffffffffff8111156111a1577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156111cf5781602001602082028036833780820191505090505b509050828160008151811061120d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505080915050919050565b6112418473ffffffffffffffffffffffffffffffffffffffff16611409565b15611401578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401611287959493929190611b07565b602060405180830381600087803b1580156112a157600080fd5b505af19250505080156112d257506040513d601f19601f820116820180604052508101906112cf91906118c0565b60015b611378576112de611fff565b806308c379a0141561133b57506112f36120e0565b806112fe575061133d565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113329190611bd5565b60405180910390fd5b505b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161136f90611bf7565b60405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146113ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113f690611c17565b60405180910390fd5b505b505050505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600061143f61143a84611cc0565b611c9b565b9050808382526020820190508285602086028201111561145e57600080fd5b60005b8581101561148e57816114748882611542565b845260208401935060208301925050600181019050611461565b5050509392505050565b60006114ab6114a684611cec565b611c9b565b905080838252602082019050828560208602820111156114ca57600080fd5b60005b858110156114fa57816114e08882611614565b8452602084019350602083019250506001810190506114cd565b5050509392505050565b600061151761151284611d18565b611c9b565b90508281526020810184848401111561152f57600080fd5b61153a848285611e84565b509392505050565b60008135905061155181612176565b92915050565b600082601f83011261156857600080fd5b813561157884826020860161142c565b91505092915050565b600082601f83011261159257600080fd5b81356115a2848260208601611498565b91505092915050565b6000813590506115ba8161218d565b92915050565b6000813590506115cf816121a4565b92915050565b6000815190506115e4816121a4565b92915050565b600082601f8301126115fb57600080fd5b813561160b848260208601611504565b91505092915050565b600081359050611623816121bb565b92915050565b6000806040838503121561163c57600080fd5b600061164a85828601611542565b925050602061165b85828601611542565b9150509250929050565b600080600080600060a0868803121561167d57600080fd5b600061168b88828901611542565b955050602061169c88828901611542565b945050604086013567ffffffffffffffff8111156116b957600080fd5b6116c588828901611581565b935050606086013567ffffffffffffffff8111156116e257600080fd5b6116ee88828901611581565b925050608086013567ffffffffffffffff81111561170b57600080fd5b611717888289016115ea565b9150509295509295909350565b600080600080600060a0868803121561173c57600080fd5b600061174a88828901611542565b955050602061175b88828901611542565b945050604061176c88828901611614565b935050606061177d88828901611614565b925050608086013567ffffffffffffffff81111561179a57600080fd5b6117a6888289016115ea565b9150509295509295909350565b600080604083850312156117c657600080fd5b60006117d485828601611542565b92505060206117e5858286016115ab565b9150509250929050565b6000806040838503121561180257600080fd5b600061181085828601611542565b925050602061182185828601611614565b9150509250929050565b6000806040838503121561183e57600080fd5b600083013567ffffffffffffffff81111561185857600080fd5b61186485828601611557565b925050602083013567ffffffffffffffff81111561188157600080fd5b61188d85828601611581565b9150509250929050565b6000602082840312156118a957600080fd5b60006118b7848285016115c0565b91505092915050565b6000602082840312156118d257600080fd5b60006118e0848285016115d5565b91505092915050565b6000602082840312156118fb57600080fd5b600061190984828501611614565b91505092915050565b600061191e8383611a81565b60208301905092915050565b61193381611e10565b82525050565b600061194482611d59565b61194e8185611d87565b935061195983611d49565b8060005b8381101561198a5781516119718882611912565b975061197c83611d7a565b92505060018101905061195d565b5085935050505092915050565b6119a081611e22565b82525050565b60006119b182611d64565b6119bb8185611d98565b93506119cb818560208601611e93565b6119d481612021565b840191505092915050565b60006119ea82611d6f565b6119f48185611da9565b9350611a04818560208601611e93565b611a0d81612021565b840191505092915050565b6000611a25603483611da9565b9150611a308261203f565b604082019050919050565b6000611a48602883611da9565b9150611a538261208e565b604082019050919050565b6000611a6b600083611da9565b9150611a76826120dd565b600082019050919050565b611a8a81611e7a565b82525050565b611a9981611e7a565b82525050565b600060a082019050611ab4600083018861192a565b611ac1602083018761192a565b8181036040830152611ad38186611939565b90508181036060830152611ae78185611939565b90508181036080830152611afb81846119a6565b90509695505050505050565b600060a082019050611b1c600083018861192a565b611b29602083018761192a565b611b366040830186611a90565b611b436060830185611a90565b8181036080830152611b5581846119a6565b90509695505050505050565b60006020820190508181036000830152611b7b8184611939565b905092915050565b60006040820190508181036000830152611b9d8185611939565b90508181036020830152611bb18184611939565b90509392505050565b6000602082019050611bcf6000830184611997565b92915050565b60006020820190508181036000830152611bef81846119df565b905092915050565b60006020820190508181036000830152611c1081611a18565b9050919050565b60006020820190508181036000830152611c3081611a3b565b9050919050565b60006020820190508181036000830152611c5081611a5e565b9050919050565b6000602082019050611c6c6000830184611a90565b92915050565b6000604082019050611c876000830185611a90565b611c946020830184611a90565b9392505050565b6000611ca5611cb6565b9050611cb18282611ef8565b919050565b6000604051905090565b600067ffffffffffffffff821115611cdb57611cda611fd0565b5b602082029050602081019050919050565b600067ffffffffffffffff821115611d0757611d06611fd0565b5b602082029050602081019050919050565b600067ffffffffffffffff821115611d3357611d32611fd0565b5b611d3c82612021565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611dc582611e7a565b9150611dd083611e7a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611e0557611e04611f72565b5b828201905092915050565b6000611e1b82611e5a565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611eb1578082015181840152602081019050611e96565b83811115611ec0576000848401525b50505050565b60006002820490506001821680611ede57607f821691505b60208210811415611ef257611ef1611fa1565b5b50919050565b611f0182612021565b810181811067ffffffffffffffff82111715611f2057611f1f611fd0565b5b80604052505050565b6000611f3482611e7a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611f6757611f66611f72565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060033d111561201e5760046000803e61201b600051612032565b90505b90565b6000601f19601f8301169050919050565b60008160e01c9050919050565b7f455243313135353a207472616e7366657220746f206e6f6e204552433131353560008201527f526563656976657220696d706c656d656e746572000000000000000000000000602082015250565b7f455243313135353a204552433131353552656365697665722072656a6563746560008201527f6420746f6b656e73000000000000000000000000000000000000000000000000602082015250565b50565b600060443d10156120f057612173565b6120f8611cb6565b60043d036004823e80513d602482011167ffffffffffffffff82111715612120575050612173565b808201805167ffffffffffffffff81111561213e5750505050612173565b80602083010160043d03850181111561215b575050505050612173565b61216a82602001850186611ef8565b82955050505050505b90565b61217f81611e10565b811461218a57600080fd5b50565b61219681611e22565b81146121a157600080fd5b50565b6121ad81611e2e565b81146121b857600080fd5b50565b6121c481611e7a565b81146121cf57600080fd5b5056fea264697066735822122079f90df133ff68874bf2b9cedf7c72c6cd52c53e9b6673404d01ee3fdbf97e0464736f6c63430008040033";

type ERC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155__factory extends ContractFactory {
  constructor(...args: ERC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    uri_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155> {
    return super.deploy(uri_, overrides || {}) as Promise<ERC1155>;
  }
  override getDeployTransaction(
    uri_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(uri_, overrides || {});
  }
  override attach(address: string): ERC1155 {
    return super.attach(address) as ERC1155;
  }
  override connect(signer: Signer): ERC1155__factory {
    return super.connect(signer) as ERC1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155Interface {
    return new utils.Interface(_abi) as ERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155 {
    return new Contract(address, _abi, signerOrProvider) as ERC1155;
  }
}
